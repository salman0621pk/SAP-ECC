*&---------------------------------------------------------------------*
*& Include MZCUSTOM_SCREENTOP                                Module Pool      SAPMZCUSTOM_SCREEN
*&
*&---------------------------------------------------------------------*
PROGRAM SAPMZCUSTOM_SCREEN.

TABLES: ZEBIZ_MATRIX, ZEBIZ_CUSTOMER , KNA1, ADR6, TCURT, VBAK,VBRK,VBRP.
Data: GT_VBRP Type TABLE OF VBRP,
      GS_VBRP Type VBRP.
CONTROLS MATRIX TYPE TABLEVIEW USING SCREEN 4019.
CONTROLS 4098_MATRIX TYPE TABLEVIEW USING SCREEN 4098.
DATA NAME TYPE C LENGTH 100.
DATA ERR TYPE STRING.
DATA: DELETE_CUSTOMER_PAYMENT_METHOD TYPE XSDBOOLEAN.
DATA EXDATE  TYPE STRING.
DATA: DETAILS TYPE ZEBIZ_CHARGETRANSACTION_DETAIL,
      RES     TYPE  /ASU/ADHOC_STEP,
      RESULT  TYPE  /ASU/ADHOC_STEP,
      CUSNUM  TYPE STRING.
DATA MERCHANT TYPE ZEBIZ_CHARGEMERCHANT_TRANSACTI.
DATA: FDATE TYPE STRING,
      TDATE TYPE STRING.
*    Data For screen 4017
DATA: 4017_TRANSENTERY    TYPE I,
      4017_CUSTOMERID     TYPE C LENGTH 22,
      4017_CURRENCY       TYPE C LENGTH 20,
      4017_PAYMENT_METHOD TYPE C LENGTH 40,
      4017_CARDNUMBER     TYPE C LENGTH 40,
      4017_EXPDATE        TYPE C LENGTH 40,
      4017_CARDCODE       TYPE C LENGTH 40,
      4017_ACCTHOLD       TYPE C LENGTH 40,
      4017_ADDRESS        TYPE C LENGTH 40,
      4017_CITY           TYPE C LENGTH 40,
      4017_STATE          TYPE C LENGTH 40,
      4017_ZIP            TYPE C LENGTH 40,
      4017_EMAIL          TYPE C LENGTH 40,
      4017_ACTIVE         TYPE C LENGTH 1,
      4017_DEFAULT_CARD   TYPE C LENGTH 1,
      4017_METHOD_NAME    TYPE C LENGTH 40,
      4017_CARD_NAME      TYPE C LENGTH 40
      .
DATA: 4020_SALES_ORDER_ID TYPE C LENGTH 40.
DATA: 4012_FROM_DATE TYPE WORKFLDS-GKDAY,
      4012_TO_DATE   TYPE WORKFLDS-GKDAY.
DATA: SEARCH_TRANSACTIONS_RESULT  TYPE ZEBIZ_CHARGETRANSACTION_SEARCH,
      4012_CWA                    TYPE ZEBIZ_CHARGETRANSACTION_OBJECT,
      4098_CWA                    TYPE ZEBIZ_CHARGETRANSACTION_OBJECT,
      4019_CWA                    TYPE ZEBIZ_CHARGERECEIPT,
      RECEIPT                     TYPE ZEBIZ_CHARGERECEIPT_TAB,
      EMAIL_RECEIPT_RESULT        TYPE ZEBIZ_CHARGEEMAIL_RECEIPT_RESP,
      TRAN                        TYPE ZEBIZ_CHARGETRANSACTION_REQUES,
      RUN_TRANSACTION_RESULT      TYPE ZEBIZ_CHARGETRANSACTION_RESPON,
      RUN_TRANSACTION_RESULT_VOID TYPE ZEBIZ_CHARGETRANSACTION_RESPON
      .
DATA CUSTOMERID TYPE C LENGTH 72.
DATA ORDERID TYPE C LENGTH 72.
DATA: CT        TYPE TABLE OF ZEBIZ_CUSTOMER,
      CWA       TYPE ZEBIZ_CUSTOMER,
      GT_ID     TYPE VRM_ID,
      GT_VALUES TYPE VRM_VALUES,
      GS_VALUES LIKE LINE OF GT_VALUES,
      TB        TYPE TABLE OF TCURT,
      WA        TYPE TCURT.
DATA: CT_MATRIX  TYPE TABLE OF ZEBIZ_MATRIX,
      CWA_MATRIX TYPE ZEBIZ_MATRIX,
      CSELECT(1) TYPE C
      .
TYPES: BEGIN OF MATRIXI,
         4012_CUSTOMER_ID        TYPE C LENGTH 100,
         4012_INVOICE_ID         TYPE C LENGTH 100,
         4012_ORDER_ID           TYPE C LENGTH 100,
         4012_REF_NUM            TYPE C LENGTH 100,
         4012_AMOUNT             TYPE /ATL/DEC16_2,
         4012_TRANSACTION_TYPE   TYPE C LENGTH 100,
         4012_AUTH_AMOUNT        TYPE /ATL/DEC16_2,
         4012_STATUS             TYPE C LENGTH 100,
         4012_TRANSACTION_STATUS TYPE C LENGTH 100,
         4012_DATE               TYPE C LENGTH 100,

       END OF MATRIXI.
TYPES: BEGIN OF 4098_MATRIXI,
         4098_CUSTOMER_ID      TYPE C LENGTH 100,
         4098_INVOICE_ID       TYPE C LENGTH 100,
         4098_ORDER_ID         TYPE C LENGTH 100,
         4098_REF_NUM          TYPE C LENGTH 100,
         4098_AMOUNT           TYPE /ATL/DEC16_2,
         4098_TRANSACTION_TYPE TYPE C LENGTH 100,
         4098_CREDIT           TYPE /ATL/DEC16_2,
         4098_STATUS           TYPE C LENGTH 100,
         4098_DATE             TYPE C LENGTH 100,
         4098_DESCRIPTION      TYPE C LENGTH 255,
         4098_CARDHOLDER       TYPE C LENGTH 100,
         4098_CARDNO           TYPE C LENGTH 100,
         4098_AVS              TYPE C LENGTH 255,
         4098_CARDCODE         TYPE C LENGTH 100,
         4098_CARDLEVEL        TYPE C LENGTH 100,

       END OF 4098_MATRIXI.

DATA : CONTAINER1 TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
       GRID       TYPE REF TO CL_GUI_ALV_GRID,
       IT_FLDCAT  TYPE LVC_T_FCAT    WITH HEADER LINE,
       IT_OUTTAB  TYPE TABLE OF MATRIXI WITH HEADER LINE.

DATA VAL TYPE STRING.
DATA: EXC TYPE REF TO CX_ROOT.
DATA: MSG TYPE STRING.
DATA: WA_GET_CUD TYPE ZEBIZ_CHARGEPAYMENT_METHOD_PRO,
      WA_GET     TYPE ZEBIZ_CHARGEPAYMENT_METHOD_TAB.
DATA: C_CORSE    TYPE KUNNR, IMX TYPE /ASU/UACC_STEP_ORDER,TRANSENTRY TYPE /ASU/UACC_STEP_ORDER, LINID TYPE N.
DATA: GET_CUSTOMER_PAYMENT_METHOD_PR TYPE ZEBIZ_CHARGEPAYMENT_METHOD_PRO,
      PAYMENT_METHOD_ID              TYPE STRING.
DATA I TYPE N.
DATA FOUND TYPE C.
DATA SUCCESS TYPE C.
DATA: CUSTOMER                       TYPE ZEBIZ_CHARGECUSTOMER,
      BILL_CUSTOMER                  TYPE ZEBIZ_CHARGEADDRESS,
      CUSTOMER_RESPONSE              TYPE ZEBIZ_CHARGECUSTOMER_RESPONSE,
      CUSTOMERPRM                    TYPE ZEBIZ_CHARGEPAYMENT_METHOD_PRO,
      ADD_CUSTOMER_PAYMENT_METHOD_PR TYPE STRING,
      CWA_AD6                        TYPE ADR6.

*&SPWIZARD: FUNCTION CODES FOR TABSTRIP 'EBIZ'
CONSTANTS: BEGIN OF C_EBIZ,
             TAB1 LIKE SY-UCOMM VALUE 'EBIZ_FC1',
             TAB2 LIKE SY-UCOMM VALUE 'EBIZ_FC2',
             TAB3 LIKE SY-UCOMM VALUE 'EBIZ_FC3',
             TAB4 LIKE SY-UCOMM VALUE 'EBIZ_FC4',
           END OF C_EBIZ.
*&SPWIZARD: DATA FOR TABSTRIP 'EBIZ'
CONTROLS:  EBIZ TYPE TABSTRIP.
DATA: BEGIN OF G_EBIZ,
        SUBSCREEN   LIKE SY-DYNNR,
        PROG        LIKE SY-REPID VALUE 'SAPMZCUSTOM_SCREEN',
        PRESSED_TAB LIKE SY-UCOMM VALUE C_EBIZ-TAB1,
      END OF G_EBIZ.
DATA:      OK_CODE LIKE SY-UCOMM
      .
*&---------------------------------------------------------------------*
*&      Module  COURSE_ACTIVE_TAB_SET  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE EBIZ_ACTIVE_TAB_SET OUTPUT.
  EBIZ-ACTIVETAB = G_EBIZ-PRESSED_TAB.
  CASE G_EBIZ-PRESSED_TAB.
    WHEN C_EBIZ-TAB1.
      G_EBIZ-SUBSCREEN = '4013'.
    WHEN C_EBIZ-TAB2.
      G_EBIZ-SUBSCREEN = '4011'.
    WHEN C_EBIZ-TAB3.
      G_EBIZ-SUBSCREEN = '4019'.
    WHEN C_EBIZ-TAB4.
      G_EBIZ-SUBSCREEN = '4018'.
    WHEN OTHERS.
*&SPWIZARD:      DO NOTHING
  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  EBIZ_ACTIVE_TAB_GET  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE EBIZ_ACTIVE_TAB_GET INPUT.
  CLEAR OK_CODE.
  OK_CODE = SY-UCOMM.
  CASE OK_CODE.
    WHEN C_EBIZ-TAB1.
      G_EBIZ-PRESSED_TAB = C_EBIZ-TAB1.
    WHEN C_EBIZ-TAB2.
      G_EBIZ-PRESSED_TAB = C_EBIZ-TAB2.
    WHEN C_EBIZ-TAB3.
      G_EBIZ-PRESSED_TAB = C_EBIZ-TAB3.
    WHEN C_EBIZ-TAB4.
      G_EBIZ-PRESSED_TAB = C_EBIZ-TAB4.
    WHEN OTHERS.
*&SPWIZARD:      DO NOTHING
  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  STATUS_4009  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_4009 OUTPUT.
*  SET PF-STATUS 'xxxxxxxx'.
*  SET TITLEBAR 'xxx'.
ENDMODULE.
*&SPWIZARD: FUNCTION CODES FOR TABSTRIP 'EBIZ'
CONSTANTS: BEGIN OF C_CARD,
             TAB1 LIKE SY-UCOMM VALUE 'CARD_FC1',
             TAB2 LIKE SY-UCOMM VALUE 'CARD_FC2',
           END OF C_CARD.
*&SPWIZARD: DATA FOR TABSTRIP 'EBIZ'
CONTROLS:  CARD TYPE TABSTRIP.
DATA: BEGIN OF G_CARD,
        SUBSCREEN   LIKE SY-DYNNR,
        PROG        LIKE SY-REPID VALUE 'SAPMZCUSTOM_SCREEN',
        PRESSED_TAB LIKE SY-UCOMM VALUE C_CARD-TAB1,
      END OF G_CARD.
*&---------------------------------------------------------------------*
*&      Module  CARD_ACTIVE_TAB_SET  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE CARD_ACTIVE_TAB_SET OUTPUT.
  CARD-ACTIVETAB = G_CARD-PRESSED_TAB.
  CASE G_CARD-PRESSED_TAB.
    WHEN C_CARD-TAB1.
      G_CARD-SUBSCREEN = '4010'.
    WHEN C_CARD-TAB2.
      G_CARD-SUBSCREEN = '4017'.
    WHEN OTHERS.
*&SPWIZARD:      DO NOTHING
  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  CARD_ACTIVE_TAB_GET  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE CARD_ACTIVE_TAB_GET INPUT.
  CLEAR OK_CODE.
  OK_CODE = SY-UCOMM.
  CASE OK_CODE.
    WHEN C_CARD-TAB1.
      G_CARD-PRESSED_TAB = C_CARD-TAB1.
    WHEN C_CARD-TAB2.
      G_CARD-PRESSED_TAB = C_CARD-TAB2.
    WHEN OTHERS.
*&SPWIZARD:      DO NOTHING
  ENDCASE.
ENDMODULE.
*&SPWIZARD: FUNCTION CODES FOR TABSTRIP 'EBIZ'
CONSTANTS: BEGIN OF C_ECHECK,
             TAB1 LIKE SY-UCOMM VALUE 'ECHECK_FC1',
             TAB2 LIKE SY-UCOMM VALUE 'ECHECK_FC2',
           END OF C_ECHECK.

*&SPWIZARD: DATA FOR TABSTRIP 'EBIZ'
CONTROLS:  ECHECK TYPE TABSTRIP.
DATA: BEGIN OF G_ECHECK,
        SUBSCREEN   LIKE SY-DYNNR,
        PROG        LIKE SY-REPID VALUE 'SAPMZCUSTOM_SCREEN',
        PRESSED_TAB LIKE SY-UCOMM VALUE C_ECHECK-TAB1,
      END OF G_ECHECK.
*&---------------------------------------------------------------------*
*&      Module  ECHECK_ACTIVE_TAB_SET  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE ECHECK_ACTIVE_TAB_SET OUTPUT.
  ECHECK-ACTIVETAB = G_ECHECK-PRESSED_TAB.
  CASE G_ECHECK-PRESSED_TAB.
    WHEN C_ECHECK-TAB1.
      G_ECHECK-SUBSCREEN = '4015'.
    WHEN C_ECHECK-TAB2.
      G_ECHECK-SUBSCREEN = '4016'.
    WHEN OTHERS.
*&SPWIZARD:      DO NOTHING
  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  ECHECK_ACTIVE_TAB_GET  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE ECHECK_ACTIVE_TAB_GET INPUT.
  CLEAR OK_CODE.
  OK_CODE = SY-UCOMM.
  CASE OK_CODE.
    WHEN C_ECHECK-TAB1.
      G_ECHECK-PRESSED_TAB = C_ECHECK-TAB1.
    WHEN C_ECHECK-TAB2.
      G_ECHECK-PRESSED_TAB = C_ECHECK-TAB2.
    WHEN OTHERS.
*&SPWIZARD:      DO NOTHING
  ENDCASE.
ENDMODULE.

*&---------------------------------------------------------------------*
*&      Module  SAVE_COMMAND_4010  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE SAVE_COMMAND_4010 INPUT.
  IF SY-UCOMM = 'FCT_SAVE'.
    DATA(LV_DATE) = SY-DATUM.
    DATA(LV_TIME) = SY-UZEIT.
    DATA EDATE TYPE STRING.
    DATA: GDATE TYPE TZONREF-TZONE VALUE 'UTC',
          TSTP  TYPE TIMESTAMP.
    DATA: SET_DEFAULT_CUSTOMER_PAYMENT_M TYPE XSDBOOLEAN,
          UPDATE_CUSTOMER_PAYMENT_METHOD TYPE XSDBOOLEAN,
          ANS                            TYPE C.
    CLEAR C_CORSE.
    CLEAR IMX.
*    CLEAR LINID.
    IMX = 0.
*    LINID = 0.

    TRY.
        CALL FUNCTION 'POPUP_TO_CONFIRM'
          EXPORTING
            TITLEBAR              = 'Save Payment Method'
            TEXT_QUESTION         = 'Do you want to save payment method ?'
            TEXT_BUTTON_1         = 'Yes'
            ICON_BUTTON_1         = 'ICON_CHECKED'
            TEXT_BUTTON_2         = 'No'
            ICON_BUTTON_2         = 'ICON_CANCEL'
            DISPLAY_CANCEL_BUTTON = ' '
            POPUP_TYPE            = 'ICON_MESSAGE_ERROR'
          IMPORTING
            ANSWER                = ANS.
        IF ANS = '2'.
          RETURN.
        ENDIF.
        IF ZEBIZ_CUSTOMER-CARDNUMBER = ''.
          MESSAGE 'Please enter card number' TYPE 'I'.
          VAL = '-1'.
          RETURN.
        ELSEIF ZEBIZ_CUSTOMER-EXPDATE = ''.
          MESSAGE 'Please enter expiry date' TYPE 'I'.
          VAL = '-1'.
          RETURN.
        ELSEIF ZEBIZ_CUSTOMER-CARDCODE = ''.
          MESSAGE 'Please enter cardcode.' TYPE 'I'.
          VAL = '-1'.
          RETURN.
        ELSEIF ZEBIZ_CUSTOMER-ACCTHOLD = ''.
          MESSAGE 'Please enter acct. holder name' TYPE 'I'.
          VAL = '-1'.
          RETURN.
        ENDIF.
        CLEAR: TRAN, DETAILS.
        CUSTOMERID = KNA1-KUNNR.
        DETAILS-NON_TAX = 'X'.
        DETAILS-TAX = '0'.
        DETAILS-ORDER_ID = 'ODRXXX'.
        DETAILS-INVOICE = 'INVXXX'.
        DETAILS-DISCOUNT = 0.
        CALL FUNCTION 'CHAR_FLTP_CONVERSION'
          EXPORTING
            STRING = '0,05'
          IMPORTING
            FLSTR  = DETAILS-AMOUNT.
        TRAN-DETAILS = DETAILS.
        TRAN-CUST_RECEIPT_NAME = KNA1-NAME1.
*            TRAN-CUST_RECEIPT_EMAIL = CWA_AD6-SMTP_ADDR.
        TRAN-CUST_RECEIPT = 'X'.
        TRAN-COMMAND = 'AuthOnly'.
        TRAN-SOFTWARE = 'SAP ECC'.
        TRAN-CREDIT_CARD_DATA-CARD_NUMBER = ZEBIZ_CUSTOMER-CARDNUMBER.
        TRAN-CREDIT_CARD_DATA-CARD_EXPIRATION = ZEBIZ_CUSTOMER-EXPDATE.
        TRAN-CREDIT_CARD_DATA-CARD_CODE = ZEBIZ_CUSTOMER-CARDCODE.
        TRAN-CUSTOMER_ID = CUSTOMERID.

        CALL FUNCTION 'ZEBIZ_CHECKCUSTOMER'
          EXPORTING
            CUSTOMER_ID         = CUSTOMERID
          IMPORTING
            FOUND               = FOUND
            GET_CUSTOMER_RESULT = CUSTOMER.
        SELECT SINGLE *  FROM ADR6 INTO  CWA_AD6
  WHERE ADDRNUMBER = KNA1-ADRNR.
        IF FOUND = 'N'.

          CUSTOMER-CUSTOMER_ID = KNA1-KUNNR.
          CUSTOMER-FIRST_NAME = KNA1-NAME1.
          CUSTOMER-LAST_NAME = KNA1-NAME2.
          CUSTOMER-PHONE = KNA1-TELF2.
          CUSTOMER-CELL_PHONE = KNA1-TELF1.
          CUSTOMER-FAX = KNA1-TELFX.
          CUSTOMER-EMAIL = CWA_AD6-SMTP_ADDR.
          "/// Billing Adrress Information
          BILL_CUSTOMER-FIRST_NAME = KNA1-NAME1.
          BILL_CUSTOMER-LAST_NAME = KNA1-NAME2.
          BILL_CUSTOMER-ADDRESS1 = KNA1-STRAS.
          BILL_CUSTOMER-CITY = KNA1-ORT01.
          BILL_CUSTOMER-STATE = KNA1-REGIO.
          BILL_CUSTOMER-ZIP_CODE = KNA1-PSTLZ.
          BILL_CUSTOMER-COUNTRY = KNA1-LAND1.
          "///"
          CUSTOMER-BILLING_ADDRESS = BILL_CUSTOMER.
          CUSTOMER-SHIPPING_ADDRESS = BILL_CUSTOMER.
          CALL FUNCTION 'ZEBIZ_ADDCUSTOMER'
            EXPORTING
              CUSTOMER          = CUSTOMER
            IMPORTING
              SUCCESSS          = SUCCESS
              CUSTOMER_RESPONSE = CUSTOMER_RESPONSE.
          IF CUSTOMER_RESPONSE-STATUS_CODE <> '1'.
            MESSAGE CUSTOMER_RESPONSE-ERROR TYPE 'E'.
else.
  CUSTOMER-CUSTOMER_INTERNAL_ID = CUSTOMER_RESPONSE-CUSTOMER_INTERNAL_ID.
          ENDIF.
        ELSE.
          CUSTOMER-CUSTOMER_ID = KNA1-KUNNR.
          CUSTOMER-FIRST_NAME = KNA1-NAME1.
          CUSTOMER-LAST_NAME = KNA1-NAME2.
          CUSTOMER-PHONE = KNA1-TELF2.
          CUSTOMER-CELL_PHONE = KNA1-TELF1.
          CUSTOMER-FAX = KNA1-TELFX.
          CUSTOMER-EMAIL = CWA_AD6-SMTP_ADDR.
          "/// Billing Adrress Information
          BILL_CUSTOMER-FIRST_NAME = KNA1-NAME1.
          BILL_CUSTOMER-LAST_NAME = KNA1-NAME2.
          BILL_CUSTOMER-ADDRESS1 = KNA1-STRAS.
          BILL_CUSTOMER-CITY = KNA1-ORT01.
          BILL_CUSTOMER-STATE = KNA1-REGIO.
          BILL_CUSTOMER-ZIP_CODE = KNA1-PSTLZ.
          BILL_CUSTOMER-COUNTRY = KNA1-LAND1.
          "///"
          CUSTOMER-BILLING_ADDRESS = BILL_CUSTOMER.
          CUSTOMER-SHIPPING_ADDRESS = BILL_CUSTOMER.
          CALL FUNCTION 'ZEBIZ_UPDATECUSTOMER'
            EXPORTING
              CUSTOMER             = CUSTOMER
              CUSTOMER_ID          = CUSTOMER-CUSTOMER_ID
              CUSTOMER_INTERNAL_ID = CUSTOMER-CUSTOMER_INTERNAL_ID
            IMPORTING
              SUCCESSS             = SUCCESS
              CUSTOMER_RESPONSE    = CUSTOMER_RESPONSE.
          IF CUSTOMER_RESPONSE-STATUS_CODE <> '1'.
            MESSAGE CUSTOMER_RESPONSE-ERROR TYPE 'E'.
          ENDIF.

        ENDIF.

        CALL FUNCTION 'ZEBIZ_GETMERCHANTTRANSACTIONDA'
          IMPORTING
            GET_MERCHANT_TRANSACTION_DATA = MERCHANT.
        IF MERCHANT-ENABLE_AVSWARNINGS = 'X' OR MERCHANT-ENABLE_CVVWARNINGS = 'X'.
          CALL FUNCTION 'ZEBIZ_RUNTRANSACTIONS'
            EXPORTING
              TRAN                   = TRAN
            IMPORTING
              RUN_TRANSACTION_RESULT = RUN_TRANSACTION_RESULT.
          ERR = RUN_TRANSACTION_RESULT-ERROR.
          TRANSLATE ERR TO LOWER CASE.

          IF RUN_TRANSACTION_RESULT-RESULT_CODE EQ 'A' OR ERR EQ 'approved' .

            CLEAR TRAN.
            TRAN-COMMAND = 'creditvoid'.
            TRAN-REF_NUM = RUN_TRANSACTION_RESULT-REF_NUM.

            CALL FUNCTION 'ZEBIZ_RUNTRANSACTIONS'
              EXPORTING
                TRAN                   = TRAN
              IMPORTING
                RUN_TRANSACTION_RESULT = RUN_TRANSACTION_RESULT_VOID.
            IF RUN_TRANSACTION_RESULT_VOID-RESULT_CODE = 'E'.
              MESSAGE RUN_TRANSACTION_RESULT_VOID-ERROR TYPE 'I'.
            ENDIF.
            CALL FUNCTION 'ZHANDLERESPONSE_CUSTOMER'
              EXPORTING
                RUN_CUSTOMER_TRANSACTION_RESUL = RUN_TRANSACTION_RESULT
              IMPORTING
                RESULT                         = RESULT.
            IF RESULT = 'X'.
              CONVERT DATE LV_DATE TIME LV_TIME INTO TIME STAMP TSTP TIME ZONE GDATE .
              CUSTOMERPRM-METHOD_TYPE = 'cc'.
              CUSTOMERPRM-METHOD_NAME = ZEBIZ_CUSTOMER-METHOD_NAME.
              CUSTOMERPRM-CREATED = TSTP.
              CUSTOMERPRM-MODIFIED = TSTP.
              CUSTOMERPRM-ACCOUNT = ZEBIZ_CUSTOMER-ACCOUNT.
              CUSTOMERPRM-ROUTING = ZEBIZ_CUSTOMER-ROUTING.
              CUSTOMERPRM-ACCOUNT_HOLDER_NAME = ZEBIZ_CUSTOMER-ACCTHOLD.
              CUSTOMERPRM-AVS_STREET = ZEBIZ_CUSTOMER-ADDRESS.
              CUSTOMERPRM-AVS_ZIP = ZEBIZ_CUSTOMER-ZIP.
              CUSTOMERPRM-CARD_CODE = ZEBIZ_CUSTOMER-CARDCODE.
              CUSTOMERPRM-CARD_EXPIRATION = ZEBIZ_CUSTOMER-EXPDATE.
              CUSTOMERPRM-CARD_NUMBER = ZEBIZ_CUSTOMER-CARDNUMBER.

              CALL FUNCTION 'ZEBIZ_ADDCUSTOMERPROFILEMETHOD'
                EXPORTING
                  CUSTOMERPRM                    = CUSTOMERPRM
                  CUSTOMER_INTERNAL_ID           = CUSTOMER-CUSTOMER_INTERNAL_ID
                IMPORTING
                  SUCCESSS                       = SUCCESS
                  ADD_CUSTOMER_PAYMENT_METHOD_PR = ADD_CUSTOMER_PAYMENT_METHOD_PR.
              IF SUCCESS = 'Y'.
                MSG = ADD_CUSTOMER_PAYMENT_METHOD_PR.
                MESSAGE  W398(00) WITH MSG.
              ELSEIF SUCCESS = 'X'.
                CALL FUNCTION 'ZEBIZ_GETPAYMENTMETHOD'
                  EXPORTING
                    CUSTOMER_ID                    = CUSTOMERID
                    PAYMENT_METHOD_ID              = ADD_CUSTOMER_PAYMENT_METHOD_PR
                  IMPORTING
                    GET_CUSTOMER_PAYMENT_METHOD_PR = GET_CUSTOMER_PAYMENT_METHOD_PR.
                IF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'V'.
                  ZEBIZ_CUSTOMER-CARD_NAME = 'VISA'.
                ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'M'.
                  ZEBIZ_CUSTOMER-CARD_NAME = 'Ma'.
                ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'A'.
                  ZEBIZ_CUSTOMER-CARD_NAME = 'Am'.
                ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'DS'.
                  ZEBIZ_CUSTOMER-CARD_NAME = 'Disc'.
                ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = ''.
                  ZEBIZ_CUSTOMER-CARD_NAME = 'eCheck'.
                ELSE.
                  ZEBIZ_CUSTOMER-CARD_NAME = GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE.

                ENDIF.
                ZEBIZ_CUSTOMER-PAYMENT_METHOD = ADD_CUSTOMER_PAYMENT_METHOD_PR.
                IF ZEBIZ_CUSTOMER-DEFAULT_CARD = 'X'.
                  CALL FUNCTION 'ZEBIZ_SETPAYMENTMETHOD_DEFAULT'
                    EXPORTING
                      CUSTOMER_ID                    = CUSTOMERID
                      PAYMENT_METHOD_ID              = ZEBIZ_CUSTOMER-PAYMENT_METHOD
                    IMPORTING
                      SET_DEFAULT_CUSTOMER_PAYMENT_M = SET_DEFAULT_CUSTOMER_PAYMENT_M.

                ENDIF.
              ENDIF.

              CALL FUNCTION 'NUMBER_GET_NEXT'
                EXPORTING
                  NR_RANGE_NR             = '01'
                  OBJECT                  = 'ZTRANS'
                IMPORTING
                  NUMBER                  = IMX
                EXCEPTIONS
                  INTERVAL_NOT_FOUND      = 1
                  NUMBER_RANGE_NOT_INTERN = 2
                  OBJECT_NOT_FOUND        = 3
                  QUANTITY_IS_0           = 4
                  QUANTITY_IS_NOT_1       = 5
                  INTERVAL_OVERFLOW       = 6
                  BUFFER_OVERFLOW         = 7
                  OTHERS                  = 8.

              CWA-TRANSENTERY = IMX.
              CWA-CUSTOMERID = KNA1-KUNNR.
              CWA-PAYMENT_METHOD = ZEBIZ_CUSTOMER-PAYMENT_METHOD.
              CWA-ACTIVE = ZEBIZ_CUSTOMER-ACTIVE.
              CWA-DEFAULT_CARD = ZEBIZ_CUSTOMER-DEFAULT_CARD.
              CWA-CARDNUMBER = ZEBIZ_CUSTOMER-CARDNUMBER.
              CWA-EXPDATE = ZEBIZ_CUSTOMER-EXPDATE.
              CWA-CARDCODE = ZEBIZ_CUSTOMER-CARDCODE.
              CWA-ACCTHOLD = ZEBIZ_CUSTOMER-ACCTHOLD.
              CWA-ACCOUNT = ZEBIZ_CUSTOMER-ACCOUNT.
              CWA-ROUTING = ZEBIZ_CUSTOMER-ROUTING.
              CWA-ADDRESS = ZEBIZ_CUSTOMER-ADDRESS.
              CWA-CITY = ZEBIZ_CUSTOMER-CITY.
              CWA-STATE = ZEBIZ_CUSTOMER-STATE.
              CWA-ZIP = ZEBIZ_CUSTOMER-ZIP.
              CWA-EMAIL = ZEBIZ_CUSTOMER-EMAIL.
              CWA-METHOD_NAME = ZEBIZ_CUSTOMER-METHOD_NAME.
              CWA-CARD_NAME = ZEBIZ_CUSTOMER-CARD_NAME.

              INSERT INTO ZEBIZ_CUSTOMER VALUES CWA.
              MESSAGE 'Customer Ebiz Data Save' TYPE 'S'.
            ELSE.
              RETURN.
            ENDIF.

          ELSE.
            CLEAR TRAN.
            TRAN-COMMAND = 'creditvoid'.
            TRAN-REF_NUM = RUN_TRANSACTION_RESULT-REF_NUM.

            CALL FUNCTION 'ZEBIZ_RUNTRANSACTIONS'
              EXPORTING
                TRAN                   = TRAN
              IMPORTING
                RUN_TRANSACTION_RESULT = RUN_TRANSACTION_RESULT_VOID.
            IF RUN_TRANSACTION_RESULT_VOID-RESULT_CODE = 'E'.
              MESSAGE RUN_TRANSACTION_RESULT_VOID-ERROR TYPE 'I'.
            ENDIF.
            IF ZEBIZ_CUSTOMER-CARDNUMBER <> ''.
              CALL FUNCTION 'POPUP_FOR_INTERACTION'
                EXPORTING
                  HEADLINE = 'Decline'
                  TEXT1    = 'Card Decline.'
                  TEXT2    = ''
                  TEXT3    = RUN_TRANSACTION_RESULT-ERROR
                  BUTTON_1 = 'OK'.
              VAL = '-1'.
              RETURN.

            ENDIF.

          ENDIF.

        ELSE.
          CONVERT DATE LV_DATE TIME LV_TIME INTO TIME STAMP TSTP TIME ZONE GDATE .
          CUSTOMERPRM-METHOD_TYPE = 'cc'.
          CUSTOMERPRM-METHOD_NAME = ZEBIZ_CUSTOMER-METHOD_NAME.
          CUSTOMERPRM-CREATED = TSTP.
          CUSTOMERPRM-MODIFIED = TSTP.
          CUSTOMERPRM-ACCOUNT = ZEBIZ_CUSTOMER-ACCOUNT.
          CUSTOMERPRM-ROUTING = ZEBIZ_CUSTOMER-ROUTING.
          CUSTOMERPRM-ACCOUNT_HOLDER_NAME = ZEBIZ_CUSTOMER-ACCTHOLD.
          CUSTOMERPRM-AVS_STREET = ZEBIZ_CUSTOMER-ADDRESS.
          CUSTOMERPRM-AVS_ZIP = ZEBIZ_CUSTOMER-ZIP.
          CUSTOMERPRM-CARD_CODE = ZEBIZ_CUSTOMER-CARDCODE.
          CUSTOMERPRM-CARD_EXPIRATION = ZEBIZ_CUSTOMER-EXPDATE.
          CUSTOMERPRM-CARD_NUMBER = ZEBIZ_CUSTOMER-CARDNUMBER.

          CALL FUNCTION 'ZEBIZ_ADDCUSTOMERPROFILEMETHOD'
            EXPORTING
              CUSTOMERPRM                    = CUSTOMERPRM
              CUSTOMER_INTERNAL_ID           = CUSTOMER-CUSTOMER_INTERNAL_ID
            IMPORTING
              SUCCESSS                       = SUCCESS
              ADD_CUSTOMER_PAYMENT_METHOD_PR = ADD_CUSTOMER_PAYMENT_METHOD_PR.
          IF SUCCESS = 'Y'.
            MSG = ADD_CUSTOMER_PAYMENT_METHOD_PR.
            MESSAGE  W398(00) WITH MSG.
          ELSEIF SUCCESS = 'X'.
            CALL FUNCTION 'ZEBIZ_GETPAYMENTMETHOD'
              EXPORTING
                CUSTOMER_ID                    = CUSTOMERID
                PAYMENT_METHOD_ID              = ADD_CUSTOMER_PAYMENT_METHOD_PR
              IMPORTING
                GET_CUSTOMER_PAYMENT_METHOD_PR = GET_CUSTOMER_PAYMENT_METHOD_PR.
            IF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'V'.
              ZEBIZ_CUSTOMER-CARD_NAME = 'VISA'.
            ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'M'.
              ZEBIZ_CUSTOMER-CARD_NAME = 'Ma'.
            ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'A'.
              ZEBIZ_CUSTOMER-CARD_NAME = 'Am'.
            ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'DS'.
              ZEBIZ_CUSTOMER-CARD_NAME = 'Disc'.
            ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = ''.
              ZEBIZ_CUSTOMER-CARD_NAME = 'eCheck'.
            ELSE.
              ZEBIZ_CUSTOMER-CARD_NAME = GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE.

            ENDIF.
            ZEBIZ_CUSTOMER-PAYMENT_METHOD = ADD_CUSTOMER_PAYMENT_METHOD_PR.
            IF ZEBIZ_CUSTOMER-DEFAULT_CARD = 'X'.
              CALL FUNCTION 'ZEBIZ_SETPAYMENTMETHOD_DEFAULT'
                EXPORTING
                  CUSTOMER_ID                    = CUSTOMERID
                  PAYMENT_METHOD_ID              = ZEBIZ_CUSTOMER-PAYMENT_METHOD
                IMPORTING
                  SET_DEFAULT_CUSTOMER_PAYMENT_M = SET_DEFAULT_CUSTOMER_PAYMENT_M.

            ENDIF.
          ENDIF.

          CALL FUNCTION 'NUMBER_GET_NEXT'
            EXPORTING
              NR_RANGE_NR             = '01'
              OBJECT                  = 'ZTRANS'
            IMPORTING
              NUMBER                  = IMX
            EXCEPTIONS
              INTERVAL_NOT_FOUND      = 1
              NUMBER_RANGE_NOT_INTERN = 2
              OBJECT_NOT_FOUND        = 3
              QUANTITY_IS_0           = 4
              QUANTITY_IS_NOT_1       = 5
              INTERVAL_OVERFLOW       = 6
              BUFFER_OVERFLOW         = 7
              OTHERS                  = 8.

          CWA-TRANSENTERY = IMX.
          CWA-CUSTOMERID = KNA1-KUNNR.
          CWA-PAYMENT_METHOD = ZEBIZ_CUSTOMER-PAYMENT_METHOD.
          CWA-ACTIVE = ZEBIZ_CUSTOMER-ACTIVE.
          CWA-DEFAULT_CARD = ZEBIZ_CUSTOMER-DEFAULT_CARD.
          CWA-CARDNUMBER = ZEBIZ_CUSTOMER-CARDNUMBER.
          CWA-EXPDATE = ZEBIZ_CUSTOMER-EXPDATE.
          CWA-CARDCODE = ZEBIZ_CUSTOMER-CARDCODE.
          CWA-ACCTHOLD = ZEBIZ_CUSTOMER-ACCTHOLD.
          CWA-ACCOUNT = ZEBIZ_CUSTOMER-ACCOUNT.
          CWA-ROUTING = ZEBIZ_CUSTOMER-ROUTING.
          CWA-ADDRESS = ZEBIZ_CUSTOMER-ADDRESS.
          CWA-CITY = ZEBIZ_CUSTOMER-CITY.
          CWA-STATE = ZEBIZ_CUSTOMER-STATE.
          CWA-ZIP = ZEBIZ_CUSTOMER-ZIP.
          CWA-EMAIL = ZEBIZ_CUSTOMER-EMAIL.
          CWA-METHOD_NAME = ZEBIZ_CUSTOMER-METHOD_NAME.
          CWA-CARD_NAME = ZEBIZ_CUSTOMER-CARD_NAME.

          INSERT INTO ZEBIZ_CUSTOMER VALUES CWA.
          MESSAGE 'Customer Ebiz Data Save' TYPE 'S'.
        ENDIF.
      CATCH CX_AI_SYSTEM_FAULT INTO EXC.
        MSG = EXC->GET_TEXT( ).
        MESSAGE  W398(00) WITH MSG.
*CATCH zcx_zsqrt_exception.
      CATCH CX_AI_APPLICATION_FAULT INTO EXC.
        MSG = EXC->GET_TEXT( ).
        MESSAGE  W398(00) WITH MSG.
    ENDTRY.
  ENDIF.

  ZEBIZ_CUSTOMER-TRANSENTERY = 0.
  ZEBIZ_CUSTOMER-CURRENCY = ''.
  ZEBIZ_CUSTOMER-ACTIVE = ''.
  ZEBIZ_CUSTOMER-DEFAULT_CARD = ''.
  ZEBIZ_CUSTOMER-CARDNUMBER = ''.
  ZEBIZ_CUSTOMER-EXPDATE = ''.
  ZEBIZ_CUSTOMER-CARDCODE = ''.
  ZEBIZ_CUSTOMER-ACCTHOLD = ''.
  ZEBIZ_CUSTOMER-ADDRESS = ''.
  ZEBIZ_CUSTOMER-CITY = ''.
  ZEBIZ_CUSTOMER-STATE = ''.
  ZEBIZ_CUSTOMER-ZIP = ''.
  ZEBIZ_CUSTOMER-EMAIL = ''.
  ZEBIZ_CUSTOMER-METHOD_NAME = ''.
  ZEBIZ_CUSTOMER-CARD_NAME = ''.
ENDMODULE.

MODULE STATUS_4011 OUTPUT.
*  SET PF-STATUS 'xxxxxxxx'.
  SET TITLEBAR '411'.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  PAYMETHOD_COMMAND_4010  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE PAYMETHOD_COMMAND_4010 INPUT.
  IF SY-UCOMM = 'FCT_PAY'.
    VAL = ZEBIZ_CUSTOMER-PAYMENT_METHOD.
    IF VAL = '-1' OR VAL = '-2'.

      ZEBIZ_CUSTOMER-TRANSENTERY = 0.
      ZEBIZ_CUSTOMER-CURRENCY = ''.
      ZEBIZ_CUSTOMER-ACTIVE = ''.
      ZEBIZ_CUSTOMER-DEFAULT_CARD = ''.
      ZEBIZ_CUSTOMER-CARDNUMBER = ''.
      ZEBIZ_CUSTOMER-EXPDATE = ''.
      ZEBIZ_CUSTOMER-CARDCODE = ''.
      ZEBIZ_CUSTOMER-ACCTHOLD = ''.
      ZEBIZ_CUSTOMER-ADDRESS = ''.
      ZEBIZ_CUSTOMER-CITY = ''.
      ZEBIZ_CUSTOMER-STATE = ''.
      ZEBIZ_CUSTOMER-ZIP = ''.
      ZEBIZ_CUSTOMER-EMAIL = ''.
      ZEBIZ_CUSTOMER-METHOD_NAME = ''.
      ZEBIZ_CUSTOMER-CARD_NAME = ''.
    ELSE.
      SELECT SINGLE * FROM ZEBIZ_CUSTOMER INTO CWA
WHERE CUSTOMERID = KNA1-KUNNR AND PAYMENT_METHOD = VAL.
      .
      IF SY-SUBRC IS INITIAL.

        TRY.
            PAYMENT_METHOD_ID = VAL.
            CALL FUNCTION 'ZEBIZ_GETPAYMENTMETHOD'
              EXPORTING
                CUSTOMER_ID                    = CUSTOMERID
                PAYMENT_METHOD_ID              = PAYMENT_METHOD_ID
              IMPORTING
                GET_CUSTOMER_PAYMENT_METHOD_PR = GET_CUSTOMER_PAYMENT_METHOD_PR.


            ZEBIZ_CUSTOMER-PAYMENT_METHOD = GET_CUSTOMER_PAYMENT_METHOD_PR-METHOD_ID.
            ZEBIZ_CUSTOMER-CARDNUMBER = GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_NUMBER.
*              ZEBIZ_CUSTOMER-CARDCODE = GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_CODE.
            ZEBIZ_CUSTOMER-ACCTHOLD = GET_CUSTOMER_PAYMENT_METHOD_PR-ACCOUNT_HOLDER_NAME.
            ZEBIZ_CUSTOMER-ROUTING = GET_CUSTOMER_PAYMENT_METHOD_PR-ROUTING.
            ZEBIZ_CUSTOMER-ACCOUNT = GET_CUSTOMER_PAYMENT_METHOD_PR-ACCOUNT.
            ZEBIZ_CUSTOMER-ADDRESS = GET_CUSTOMER_PAYMENT_METHOD_PR-AVS_STREET.
            ZEBIZ_CUSTOMER-ZIP = GET_CUSTOMER_PAYMENT_METHOD_PR-AVS_ZIP.
            ZEBIZ_CUSTOMER-METHOD_NAME = GET_CUSTOMER_PAYMENT_METHOD_PR-METHOD_NAME.
            IF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'V'.
              ZEBIZ_CUSTOMER-CARD_NAME = 'VISA'.
            ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'M'.
              ZEBIZ_CUSTOMER-CARD_NAME = 'Ma'.
            ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'A'.
              ZEBIZ_CUSTOMER-CARD_NAME = 'Am'.
            ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'DS'.
              ZEBIZ_CUSTOMER-CARD_NAME = 'Disc'.
            ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = ''.
              ZEBIZ_CUSTOMER-CARD_NAME = 'eCheck'.
            ELSE.
              ZEBIZ_CUSTOMER-CARD_NAME = GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE.

            ENDIF.
            IF GET_CUSTOMER_PAYMENT_METHOD_PR-SECONDARY_SORT = '0'.
              ZEBIZ_CUSTOMER-DEFAULT_CARD = 'X'.
            ELSE.
              ZEBIZ_CUSTOMER-DEFAULT_CARD = ''.
            ENDIF.
          CATCH CX_AI_SYSTEM_FAULT INTO EXC.
            MSG = EXC->GET_TEXT( ).
            WRITE:/  MSG.
*CATCH zcx_zsqrt_exception.
          CATCH CX_AI_APPLICATION_FAULT INTO EXC.
            MSG = EXC->GET_TEXT( ).
            WRITE:/  MSG.
        ENDTRY.

        IF CWA-TRANSENTERY <> ''.
          ZEBIZ_CUSTOMER-TRANSENTERY = CWA-TRANSENTERY.
          ZEBIZ_CUSTOMER-CUSTOMERID = CWA-CUSTOMERID.
          ZEBIZ_CUSTOMER-CURRENCY = CWA-CURRENCY.
          ZEBIZ_CUSTOMER-ACTIVE = CWA-ACTIVE.
          ZEBIZ_CUSTOMER-CARDCODE = CWA-CARDCODE.

          ZEBIZ_CUSTOMER-EXPDATE = CWA-EXPDATE.
          ZEBIZ_CUSTOMER-CITY = CWA-CITY.
          ZEBIZ_CUSTOMER-STATE = CWA-STATE.
          ZEBIZ_CUSTOMER-EMAIL = CWA-EMAIL.
        ENDIF.

      ENDIF.

    ENDIF.
  ENDIF.
ENDMODULE.

MODULE PAYMETHOD_COMMAND_4015 INPUT.
  IF SY-UCOMM = 'FCT_PAY3'.
    VAL = ZEBIZ_CUSTOMER-PAYMENT_METHOD.
    IF VAL = '-1' OR VAL = '-2'.

      ZEBIZ_CUSTOMER-TRANSENTERY = 0.
      ZEBIZ_CUSTOMER-CURRENCY = ''.
      ZEBIZ_CUSTOMER-ACTIVE = ''.
      ZEBIZ_CUSTOMER-DEFAULT_CARD = ''.
      ZEBIZ_CUSTOMER-CARDNUMBER = ''.
      ZEBIZ_CUSTOMER-EXPDATE = ''.
      ZEBIZ_CUSTOMER-CARDCODE = ''.
      ZEBIZ_CUSTOMER-ACCTHOLD = ''.
      ZEBIZ_CUSTOMER-ADDRESS = ''.
      ZEBIZ_CUSTOMER-CITY = ''.
      ZEBIZ_CUSTOMER-STATE = ''.
      ZEBIZ_CUSTOMER-ZIP = ''.
      ZEBIZ_CUSTOMER-EMAIL = ''.
      ZEBIZ_CUSTOMER-METHOD_NAME = ''.
      ZEBIZ_CUSTOMER-CARD_NAME = ''.
    ELSE.
      SELECT SINGLE * FROM ZEBIZ_CUSTOMER INTO CWA
WHERE CUSTOMERID = KNA1-KUNNR AND PAYMENT_METHOD = VAL.
      .
      IF SY-SUBRC IS INITIAL.

        TRY.
            PAYMENT_METHOD_ID = VAL.
            CALL FUNCTION 'ZEBIZ_GETPAYMENTMETHOD'
              EXPORTING
                CUSTOMER_ID                    = CUSTOMERID
                PAYMENT_METHOD_ID              = PAYMENT_METHOD_ID
              IMPORTING
                GET_CUSTOMER_PAYMENT_METHOD_PR = GET_CUSTOMER_PAYMENT_METHOD_PR.


            ZEBIZ_CUSTOMER-PAYMENT_METHOD = GET_CUSTOMER_PAYMENT_METHOD_PR-METHOD_ID.
            ZEBIZ_CUSTOMER-CARDNUMBER = GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_NUMBER.
*              ZEBIZ_CUSTOMER-CARDCODE = GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_CODE.
            ZEBIZ_CUSTOMER-ACCTHOLD = GET_CUSTOMER_PAYMENT_METHOD_PR-ACCOUNT_HOLDER_NAME.
            ZEBIZ_CUSTOMER-ROUTING = GET_CUSTOMER_PAYMENT_METHOD_PR-ROUTING.
            ZEBIZ_CUSTOMER-ACCOUNT = GET_CUSTOMER_PAYMENT_METHOD_PR-ACCOUNT.
            ZEBIZ_CUSTOMER-ADDRESS = GET_CUSTOMER_PAYMENT_METHOD_PR-AVS_STREET.
            ZEBIZ_CUSTOMER-ZIP = GET_CUSTOMER_PAYMENT_METHOD_PR-AVS_ZIP.
            ZEBIZ_CUSTOMER-METHOD_NAME = GET_CUSTOMER_PAYMENT_METHOD_PR-METHOD_NAME.
            IF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'V'.
              ZEBIZ_CUSTOMER-CARD_NAME = 'VISA'.
            ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'M'.
              ZEBIZ_CUSTOMER-CARD_NAME = 'Ma'.
            ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'A'.
              ZEBIZ_CUSTOMER-CARD_NAME = 'Am'.
            ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'DS'.
              ZEBIZ_CUSTOMER-CARD_NAME = 'Disc'.
            ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = ''.
              ZEBIZ_CUSTOMER-CARD_NAME = 'eCheck'.
            ELSE.
              ZEBIZ_CUSTOMER-CARD_NAME = GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE.

            ENDIF.
            IF GET_CUSTOMER_PAYMENT_METHOD_PR-SECONDARY_SORT = '0'.
              ZEBIZ_CUSTOMER-DEFAULT_CARD = 'X'.
            ELSE.
              ZEBIZ_CUSTOMER-DEFAULT_CARD = ''.
            ENDIF.
          CATCH CX_AI_SYSTEM_FAULT INTO EXC.
            MSG = EXC->GET_TEXT( ).
            WRITE:/  MSG.
*CATCH zcx_zsqrt_exception.
          CATCH CX_AI_APPLICATION_FAULT INTO EXC.
            MSG = EXC->GET_TEXT( ).
            WRITE:/  MSG.
        ENDTRY.

        IF CWA-TRANSENTERY <> ''.
          ZEBIZ_CUSTOMER-TRANSENTERY = CWA-TRANSENTERY.
          ZEBIZ_CUSTOMER-CUSTOMERID = CWA-CUSTOMERID.
          ZEBIZ_CUSTOMER-CURRENCY = CWA-CURRENCY.
          ZEBIZ_CUSTOMER-ACTIVE = CWA-ACTIVE.
          ZEBIZ_CUSTOMER-CARDCODE = CWA-CARDCODE.

          ZEBIZ_CUSTOMER-EXPDATE = CWA-EXPDATE.
          ZEBIZ_CUSTOMER-CITY = CWA-CITY.
          ZEBIZ_CUSTOMER-STATE = CWA-STATE.
          ZEBIZ_CUSTOMER-EMAIL = CWA-EMAIL.
        ENDIF.

      ENDIF.

    ENDIF.
  ENDIF.
ENDMODULE.


MODULE DELETE_COMMAND_4016 INPUT.
  IF SY-UCOMM = 'FCT_DEL1'.
    TRY.
        CALL FUNCTION 'POPUP_TO_CONFIRM'
          EXPORTING
            TITLEBAR              = 'Delete Payment Method'
            TEXT_QUESTION         = 'Do you want to delete payment method ?'
            TEXT_BUTTON_1         = 'Yes'
            ICON_BUTTON_1         = 'ICON_CHECKED'
            TEXT_BUTTON_2         = 'No'
            ICON_BUTTON_2         = 'ICON_CANCEL'
            DISPLAY_CANCEL_BUTTON = ' '
            POPUP_TYPE            = 'ICON_MESSAGE_ERROR'
          IMPORTING
            ANSWER                = ANS.
        IF ANS = '2'.
          RETURN.
        ENDIF.
        PAYMENT_METHOD_ID = ZEBIZ_CUSTOMER-PAYMENT_METHOD.
        CUSTOMERID = KNA1-KUNNR.
        CALL FUNCTION 'ZEBIZ_DELETEPAYMENTMETHOD'
          EXPORTING
            CUSTOMER_ID                    = CUSTOMERID
            PAYMENT_METHOD_ID              = PAYMENT_METHOD_ID
          IMPORTING
            DELETE_CUSTOMER_PAYMENT_METHOD = DELETE_CUSTOMER_PAYMENT_METHOD.
        IF DELETE_CUSTOMER_PAYMENT_METHOD = 'X'.
          CWA-TRANSENTERY = ZEBIZ_CUSTOMER-TRANSENTERY.
          DELETE ZEBIZ_CUSTOMER FROM CWA.
          MESSAGE 'Customer Payment Method Deleted' TYPE 'S'.
        ENDIF.
      CATCH CX_AI_SYSTEM_FAULT INTO EXC.
        MSG = EXC->GET_TEXT( ).
        MESSAGE  W398(00) WITH MSG.
*CATCH zcx_zsqrt_exception.
      CATCH CX_AI_APPLICATION_FAULT INTO EXC.
        MSG = EXC->GET_TEXT( ).
        MESSAGE  W398(00) WITH MSG.
    ENDTRY.

  ENDIF.
ENDMODULE.

MODULE STATUS_4010 OUTPUT.
  OK_CODE = SY-UCOMM.
  CASE OK_CODE.
    WHEN C_CARD-TAB1 OR C_EBIZ-TAB1 OR 'AO01'.

      ZEBIZ_CUSTOMER-TRANSENTERY = 0.
      ZEBIZ_CUSTOMER-ACTIVE = ''.
      ZEBIZ_CUSTOMER-DEFAULT_CARD = ''.
      ZEBIZ_CUSTOMER-CARDNUMBER = ''.
      ZEBIZ_CUSTOMER-EXPDATE = ''.
      ZEBIZ_CUSTOMER-CARDCODE = ''.
      ZEBIZ_CUSTOMER-ACCTHOLD = ''.
      ZEBIZ_CUSTOMER-ADDRESS = ''.
      ZEBIZ_CUSTOMER-CITY = ''.
      ZEBIZ_CUSTOMER-STATE = ''.
      ZEBIZ_CUSTOMER-ZIP = ''.
      ZEBIZ_CUSTOMER-EMAIL = ''.
      ZEBIZ_CUSTOMER-METHOD_NAME = ''.
      ZEBIZ_CUSTOMER-CARD_NAME = ''.

      CLEAR: GS_VALUES, GT_VALUES[].

  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  GETDATA_4014  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE GETDATA_4010 OUTPUT.
  OK_CODE = SY-UCOMM.
  CASE OK_CODE.
    WHEN C_CARD-TAB1 OR C_EBIZ-TAB1 OR 'AO01'.
      SELECT SINGLE *  FROM ADR6 INTO  CWA_AD6
       WHERE ADDRNUMBER = KNA1-ADRNR.
      CONCATENATE KNA1-NAME1 KNA1-NAME2 INTO NAME SEPARATED BY SPACE.
      ZEBIZ_CUSTOMER-ACCTHOLD = NAME.
      ZEBIZ_CUSTOMER-ADDRESS = KNA1-STRAS.
      ZEBIZ_CUSTOMER-CITY = KNA1-ORT01.
      ZEBIZ_CUSTOMER-STATE = KNA1-REGIO.
      ZEBIZ_CUSTOMER-ZIP = KNA1-PSTLZ.
      ZEBIZ_CUSTOMER-EMAIL = CWA_AD6-SMTP_ADDR.
      ZEBIZ_CUSTOMER-METHOD_NAME = KNA1-NAME1.
      ZEBIZ_CUSTOMER-ACTIVE = 'X'.

      LOOP AT SCREEN.
        CASE SCREEN-NAME.
          WHEN 'ZEBIZ_CUSTOMER-CARDNUMBER'.
            SCREEN-INPUT = '1'. "Input Disabled for VBELN
            MODIFY SCREEN.
          WHEN 'ZEBIZ_CUSTOMER-CARD_NAME'.
            SCREEN-INPUT = '0'. "Input Disabled for POSNR
            MODIFY SCREEN.
        ENDCASE.
      ENDLOOP.
*
  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  STATUS_4015  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_4015 OUTPUT.
*  SET PF-STATUS 'xxxxxxxx'.
*  SET TITLEBAR 'xxx'.
  OK_CODE = SY-UCOMM.
  CASE OK_CODE.
    WHEN C_ECHECK-TAB1 OR C_EBIZ-TAB2.
      CLEAR ZEBIZ_CUSTOMER.
      CLEAR: GS_VALUES, GT_VALUES[].
      GS_VALUES-TEXT = 'Checking'.
      GS_VALUES-KEY = 'Checking'.
      APPEND GS_VALUES TO GT_VALUES.
      GS_VALUES-TEXT = 'Savings'.
      GS_VALUES-KEY = 'Savings'.
      APPEND GS_VALUES TO GT_VALUES.
      GT_ID = 'ZEBIZ_CUSTOMER-ACCOUNT_TYPE'.

      CALL FUNCTION 'VRM_SET_VALUES'
        EXPORTING
          ID     = GT_ID
          VALUES = GT_VALUES.
      ZEBIZ_CUSTOMER-TRANSENTERY = 0.
      ZEBIZ_CUSTOMER-ACTIVE = ''.
      ZEBIZ_CUSTOMER-DEFAULT_CARD = ''.
      ZEBIZ_CUSTOMER-CARDNUMBER = ''.
      ZEBIZ_CUSTOMER-EXPDATE = ''.
      ZEBIZ_CUSTOMER-CARDCODE = ''.
      ZEBIZ_CUSTOMER-ACCTHOLD = ''.
      ZEBIZ_CUSTOMER-ADDRESS = ''.
      ZEBIZ_CUSTOMER-CITY = ''.
      ZEBIZ_CUSTOMER-STATE = ''.
      ZEBIZ_CUSTOMER-ZIP = ''.
      ZEBIZ_CUSTOMER-EMAIL = ''.
      ZEBIZ_CUSTOMER-METHOD_NAME = ''.
      ZEBIZ_CUSTOMER-CARD_NAME = ''.

  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  GETDATA_4015  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE GETDATA_4015 OUTPUT.
  OK_CODE = SY-UCOMM.
  CASE OK_CODE.
    WHEN C_ECHECK-TAB1 OR C_EBIZ-TAB2.
      CLEAR ZEBIZ_CUSTOMER.
      SELECT SINGLE *  FROM ADR6 INTO  CWA_AD6
        WHERE ADDRNUMBER = KNA1-ADRNR.
      CONCATENATE KNA1-NAME1 KNA1-NAME2 INTO NAME SEPARATED BY SPACE.
      ZEBIZ_CUSTOMER-ACCTHOLD = NAME.
      ZEBIZ_CUSTOMER-ADDRESS = KNA1-STRAS.
      ZEBIZ_CUSTOMER-CITY = KNA1-ORT01.
      ZEBIZ_CUSTOMER-STATE = KNA1-REGIO.
      ZEBIZ_CUSTOMER-ZIP = KNA1-PSTLZ.
      ZEBIZ_CUSTOMER-EMAIL = CWA_AD6-SMTP_ADDR.
      ZEBIZ_CUSTOMER-METHOD_NAME = KNA1-NAME1.
      ZEBIZ_CUSTOMER-ACTIVE = 'X'.
      ZEBIZ_CUSTOMER-ACCOUNT_TYPE = 'Checking'.

  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  STATUS_4016 OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_4016 OUTPUT.
*  SET PF-STATUS '4010'.
  OK_CODE = SY-UCOMM.
  CASE OK_CODE.
    WHEN C_ECHECK-TAB2.
      CLEAR ZEBIZ_CUSTOMER.
      ZEBIZ_CUSTOMER-TRANSENTERY = 0.
      ZEBIZ_CUSTOMER-ACTIVE = ''.
      ZEBIZ_CUSTOMER-DEFAULT_CARD = ''.
      ZEBIZ_CUSTOMER-CARDNUMBER = ''.
      ZEBIZ_CUSTOMER-EXPDATE = ''.
      ZEBIZ_CUSTOMER-CARDCODE = ''.
      ZEBIZ_CUSTOMER-ACCTHOLD = ''.
      ZEBIZ_CUSTOMER-ADDRESS = ''.
      ZEBIZ_CUSTOMER-CITY = ''.
      ZEBIZ_CUSTOMER-STATE = ''.
      ZEBIZ_CUSTOMER-ZIP = ''.
      ZEBIZ_CUSTOMER-EMAIL = ''.
      ZEBIZ_CUSTOMER-METHOD_NAME = ''.
      ZEBIZ_CUSTOMER-CARD_NAME = ''.
      ZEBIZ_CUSTOMER-PAYMENT_METHOD = ''.

* Implement suitable error handling here
      CLEAR: GS_VALUES, GT_VALUES[].
      TRY.
          CLEAR: GS_VALUES, GT_VALUES[].
          GS_VALUES-TEXT = 'Checking'.
          GS_VALUES-KEY = 'Checking'.
          APPEND GS_VALUES TO GT_VALUES.
          GS_VALUES-TEXT = 'Savings'.
          GS_VALUES-KEY = 'Savings'.
          APPEND GS_VALUES TO GT_VALUES.
          GT_ID = 'ZEBIZ_CUSTOMER-ACCOUNT_TYPE'.

          CALL FUNCTION 'VRM_SET_VALUES'
            EXPORTING
              ID     = GT_ID
              VALUES = GT_VALUES.
          CUSTOMERID = KNA1-KUNNR.
          CLEAR: GS_VALUES, GT_VALUES[].
          CALL FUNCTION 'ZEBIZ_PAYMENTMETHODS'
            EXPORTING
              CUSTOMER_ID       = CUSTOMERID
            IMPORTING
              PAYMENT_METHOD_PR = WA_GET.
          LOOP AT WA_GET INTO WA_GET_CUD.
            IF WA_GET_CUD-ACCOUNT <> ''.
              GS_VALUES-TEXT = WA_GET_CUD-ACCOUNT.
              GS_VALUES-KEY = WA_GET_CUD-METHOD_ID.
              APPEND GS_VALUES TO GT_VALUES.
              TRY.

                  GET_CUSTOMER_PAYMENT_METHOD_PR = WA_GET_CUD.

                  IF GET_CUSTOMER_PAYMENT_METHOD_PR-SECONDARY_SORT = '0'.
                    ZEBIZ_CUSTOMER-CARDNUMBER = GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_NUMBER.
                    ZEBIZ_CUSTOMER-CARDCODE = GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_CODE.
                    ZEBIZ_CUSTOMER-ACCTHOLD = GET_CUSTOMER_PAYMENT_METHOD_PR-ACCOUNT_HOLDER_NAME.
                    ZEBIZ_CUSTOMER-ROUTING = GET_CUSTOMER_PAYMENT_METHOD_PR-ROUTING.
                    ZEBIZ_CUSTOMER-ACCOUNT = GET_CUSTOMER_PAYMENT_METHOD_PR-ACCOUNT.
                    ZEBIZ_CUSTOMER-ADDRESS = GET_CUSTOMER_PAYMENT_METHOD_PR-AVS_STREET.
                    ZEBIZ_CUSTOMER-ZIP = GET_CUSTOMER_PAYMENT_METHOD_PR-AVS_ZIP.
                    ZEBIZ_CUSTOMER-ACCOUNT_TYPE = GET_CUSTOMER_PAYMENT_METHOD_PR-ACCOUNT_TYPE.
                    ZEBIZ_CUSTOMER-METHOD_NAME = GET_CUSTOMER_PAYMENT_METHOD_PR-METHOD_NAME.
                    IF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'V'.
                      ZEBIZ_CUSTOMER-CARD_NAME = 'VISA'.
                    ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'M'.
                      ZEBIZ_CUSTOMER-CARD_NAME = 'Ma'.
                    ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'A'.
                      ZEBIZ_CUSTOMER-CARD_NAME = 'Am'.
                    ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'DS'.
                      ZEBIZ_CUSTOMER-CARD_NAME = 'Disc'.
                    ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = ''.
                      ZEBIZ_CUSTOMER-CARD_NAME = 'eCheck'.
                    ELSE.
                      ZEBIZ_CUSTOMER-CARD_NAME = GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE.

                    ENDIF.
                  ENDIF.
                CATCH CX_AI_SYSTEM_FAULT INTO EXC.
                  MSG = EXC->GET_TEXT( ).
                  WRITE:/  MSG.
*CATCH zcx_zsqrt_exception.
                CATCH CX_AI_APPLICATION_FAULT INTO EXC.
                  MSG = EXC->GET_TEXT( ).
                  WRITE:/  MSG.
              ENDTRY.

            ENDIF.
          ENDLOOP.
        CATCH CX_AI_SYSTEM_FAULT INTO EXC.
          MSG = EXC->GET_TEXT( ).
          WRITE:/  MSG.
*CATCH zcx_zsqrt_exception.
        CATCH CX_AI_APPLICATION_FAULT INTO EXC.
          MSG = EXC->GET_TEXT( ).
          WRITE:/  MSG.
      ENDTRY.


      GT_ID = 'ZEBIZ_CUSTOMER-PAYMENT_METHOD'.

      CALL FUNCTION 'VRM_SET_VALUES'
        EXPORTING
          ID     = GT_ID
          VALUES = GT_VALUES.
*  EXCEPTIONS
*    ID_ILLEGAL_NAME       = 1
*    OTHERS                = 2
      .
  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  GETDATA_4016  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE GETDATA_4016 OUTPUT.

  OK_CODE = SY-UCOMM.
  CASE OK_CODE.
    WHEN C_ECHECK-TAB2.
      SELECT SINGLE * FROM ZEBIZ_CUSTOMER INTO CWA
        WHERE CUSTOMERID = KNA1-KUNNR AND DEFAULT_CARD = 'X' AND ACCOUNT <> ''
*        AND PAYMENT_METHOD = ZEBIZ_CUSTOMER-PAYMENT_METHOD
      .
      IF SY-SUBRC IS INITIAL.
        IF CWA-TRANSENTERY <> ''.
          TRY.
              PAYMENT_METHOD_ID = CWA-PAYMENT_METHOD.
              CALL FUNCTION 'ZEBIZ_GETPAYMENTMETHOD'
                EXPORTING
                  CUSTOMER_ID                    = CUSTOMERID
                  PAYMENT_METHOD_ID              = PAYMENT_METHOD_ID
                IMPORTING
                  GET_CUSTOMER_PAYMENT_METHOD_PR = GET_CUSTOMER_PAYMENT_METHOD_PR.

              ZEBIZ_CUSTOMER-PAYMENT_METHOD = GET_CUSTOMER_PAYMENT_METHOD_PR-METHOD_ID.
              ZEBIZ_CUSTOMER-CARDNUMBER = GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_NUMBER.
*            ZEBIZ_CUSTOMER-CARDCODE = GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_CODE.
*
              ZEBIZ_CUSTOMER-ACCTHOLD = GET_CUSTOMER_PAYMENT_METHOD_PR-ACCOUNT_HOLDER_NAME.
              ZEBIZ_CUSTOMER-ROUTING = GET_CUSTOMER_PAYMENT_METHOD_PR-ROUTING.
              ZEBIZ_CUSTOMER-ACCOUNT = GET_CUSTOMER_PAYMENT_METHOD_PR-ACCOUNT.
              ZEBIZ_CUSTOMER-ADDRESS = GET_CUSTOMER_PAYMENT_METHOD_PR-AVS_STREET.
              ZEBIZ_CUSTOMER-ZIP = GET_CUSTOMER_PAYMENT_METHOD_PR-AVS_ZIP.
              ZEBIZ_CUSTOMER-ACCOUNT_TYPE = GET_CUSTOMER_PAYMENT_METHOD_PR-ACCOUNT_TYPE.
              ZEBIZ_CUSTOMER-METHOD_NAME = GET_CUSTOMER_PAYMENT_METHOD_PR-METHOD_NAME.
              IF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'V'.
                ZEBIZ_CUSTOMER-CARD_NAME = 'VISA'.
              ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'M'.
                ZEBIZ_CUSTOMER-CARD_NAME = 'Ma'.
              ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'A'.
                ZEBIZ_CUSTOMER-CARD_NAME = 'Am'.
              ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'DS'.
                ZEBIZ_CUSTOMER-CARD_NAME = 'Disc'.
              ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = ''.
                ZEBIZ_CUSTOMER-CARD_NAME = 'eCheck'.
              ELSE.
                ZEBIZ_CUSTOMER-CARD_NAME = GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE.

              ENDIF.
              IF GET_CUSTOMER_PAYMENT_METHOD_PR-SECONDARY_SORT = '0'.
                ZEBIZ_CUSTOMER-DEFAULT_CARD = 'X'.
              ELSE.
                ZEBIZ_CUSTOMER-DEFAULT_CARD = ''.
              ENDIF.
            CATCH CX_AI_SYSTEM_FAULT INTO EXC.
              MSG = EXC->GET_TEXT( ).
              WRITE:/  MSG.
*CATCH zcx_zsqrt_exception.
            CATCH CX_AI_APPLICATION_FAULT INTO EXC.
              MSG = EXC->GET_TEXT( ).
              WRITE:/  MSG.
          ENDTRY.
          ZEBIZ_CUSTOMER-TRANSENTERY = CWA-TRANSENTERY.
          TRANSENTRY = CWA-TRANSENTERY.
          ZEBIZ_CUSTOMER-CUSTOMERID = CWA-CUSTOMERID.
          ZEBIZ_CUSTOMER-ACTIVE = CWA-ACTIVE.

          ZEBIZ_CUSTOMER-ADDRESS = CWA-ADDRESS.
          ZEBIZ_CUSTOMER-ZIP = CWA-ZIP.
          ZEBIZ_CUSTOMER-CITY = CWA-CITY.
          ZEBIZ_CUSTOMER-STATE = CWA-STATE.
          ZEBIZ_CUSTOMER-EMAIL = CWA-EMAIL.
          LOOP AT SCREEN.
            CASE SCREEN-NAME.
              WHEN 'ZEBIZ_CUSTOMER-CARD_NAME'.
                SCREEN-INPUT = '0'. "Input Disabled for POSNR
                MODIFY SCREEN.
            ENDCASE.
          ENDLOOP.
*
        ENDIF.

      ENDIF.

  ENDCASE.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  SAVE_COMMAND_4015  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE SAVE_COMMAND_4015 INPUT.

  IF SY-UCOMM = 'FCT_SAVE2'.
    LV_DATE = SY-DATUM.
    LV_TIME = SY-UZEIT.

    CLEAR C_CORSE.
    CLEAR IMX.
*    CLEAR LINID.
    IMX = 0.
*    LINID = 0.

    TRY.
        CALL FUNCTION 'POPUP_TO_CONFIRM'
          EXPORTING
            TITLEBAR              = 'Save Payment Method'
            TEXT_QUESTION         = 'Do you want to save payment method ?'
            TEXT_BUTTON_1         = 'Yes'
            ICON_BUTTON_1         = 'ICON_CHECKED'
            TEXT_BUTTON_2         = 'No'
            ICON_BUTTON_2         = 'ICON_CANCEL'
            DISPLAY_CANCEL_BUTTON = ' '
            POPUP_TYPE            = 'ICON_MESSAGE_ERROR'
          IMPORTING
            ANSWER                = ANS.
        IF ANS = '2'.
          RETURN.
        ENDIF.

        IF ZEBIZ_CUSTOMER-ACCTHOLD = ''.
          MESSAGE 'Please enter acct. holder name' TYPE 'I'.
          VAL = '-2'.
          RETURN.
        ELSEIF ZEBIZ_CUSTOMER-ROUTING = ''.
          MESSAGE 'Please enter routing No' TYPE 'I'.
          VAL = '-2'.
          RETURN.
        ELSEIF ZEBIZ_CUSTOMER-ACCOUNT = ''.
          MESSAGE 'Please enter account No' TYPE 'I'.
          VAL = '-2'.
          CLEAR SY-UCOMM.
          RETURN.
        ELSEIF ZEBIZ_CUSTOMER-ACCOUNT_TYPE = ''.
          MESSAGE 'Please select account type' TYPE 'I'.
          VAL = '-2'.
          CLEAR SY-UCOMM.
          RETURN.
        ELSE.
          IF STRLEN( ZEBIZ_CUSTOMER-ROUTING ) <> 9.
            MESSAGE 'ROUTING No. must be 9 characters long' TYPE 'I'.
            VAL = ZEBIZ_CUSTOMER-ACCOUNT.
            CLEAR ZEBIZ_CUSTOMER-ACCOUNT.
            ZEBIZ_CUSTOMER-ACCOUNT = VAL.
            VAL = ZEBIZ_CUSTOMER-ROUTING.
            CLEAR ZEBIZ_CUSTOMER-ROUTING.
            ZEBIZ_CUSTOMER-ROUTING = VAL.

            VAL = '-2'.
            RETURN.
          ELSEIF STRLEN( ZEBIZ_CUSTOMER-ACCOUNT ) < 9 OR STRLEN( ZEBIZ_CUSTOMER-ACCOUNT ) > 14.
            MESSAGE 'Accounter No. must be in between 9 to 14 characters long' TYPE 'I'.
            VAL = ZEBIZ_CUSTOMER-ACCOUNT.
            CLEAR ZEBIZ_CUSTOMER-ACCOUNT.
            ZEBIZ_CUSTOMER-ACCOUNT = VAL.
            VAL = ZEBIZ_CUSTOMER-ROUTING.
            CLEAR ZEBIZ_CUSTOMER-ROUTING.
            ZEBIZ_CUSTOMER-ROUTING = VAL.
            VAL = '-2'.

            RETURN.
          ENDIF.
        ENDIF.

        CUSTOMERID = KNA1-KUNNR.
        CLEAR: TRAN, DETAILS.
        DETAILS-NON_TAX = 'X'.
        DETAILS-TAX = '0'.
        DETAILS-ORDER_ID = 'ODRXXX'.
        DETAILS-INVOICE = 'INVXXX'.
        DETAILS-DISCOUNT = 0.
        CALL FUNCTION 'CHAR_FLTP_CONVERSION'
          EXPORTING
            STRING = '0,05'
          IMPORTING
            FLSTR  = DETAILS-AMOUNT.
        TRAN-DETAILS = DETAILS.
        TRAN-CUST_RECEIPT_NAME = KNA1-NAME1.
*            TRAN-CUST_RECEIPT_EMAIL = CWA_AD6-SMTP_ADDR.
        TRAN-CUST_RECEIPT = 'X'.
        TRAN-COMMAND = 'AuthOnly'.
        TRAN-SOFTWARE = 'SAP ECC'.
        TRAN-CHECK_DATA-ACCOUNT = ZEBIZ_CUSTOMER-ACCOUNT.
        TRAN-CHECK_DATA-ACCOUNT_TYPE = ZEBIZ_CUSTOMER-ACCOUNT_TYPE.
        TRAN-CHECK_DATA-ROUTING = ZEBIZ_CUSTOMER-ROUTING.
        TRAN-CUSTOMER_ID = CUSTOMERID.
        CALL FUNCTION 'ZEBIZ_CHECKCUSTOMER'
          EXPORTING
            CUSTOMER_ID         = CUSTOMERID
          IMPORTING
            FOUND               = FOUND
            GET_CUSTOMER_RESULT = CUSTOMER.
        SELECT SINGLE *  FROM ADR6 INTO  CWA_AD6
  WHERE ADDRNUMBER = KNA1-ADRNR.
        IF FOUND = 'N'.

          CUSTOMER-CUSTOMER_ID = KNA1-KUNNR.
          CUSTOMER-FIRST_NAME = KNA1-NAME1.
          CUSTOMER-LAST_NAME = KNA1-NAME2.
          CUSTOMER-PHONE = KNA1-TELF2.
          CUSTOMER-CELL_PHONE = KNA1-TELF1.
          CUSTOMER-FAX = KNA1-TELFX.
          CUSTOMER-EMAIL = CWA_AD6-SMTP_ADDR.
          "/// Billing Adrress Information
          BILL_CUSTOMER-FIRST_NAME = KNA1-NAME1.
          BILL_CUSTOMER-LAST_NAME = KNA1-NAME2.
          BILL_CUSTOMER-ADDRESS1 = KNA1-STRAS.
          BILL_CUSTOMER-CITY = KNA1-ORT01.
          BILL_CUSTOMER-STATE = KNA1-REGIO.
          BILL_CUSTOMER-ZIP_CODE = KNA1-PSTLZ.
          BILL_CUSTOMER-COUNTRY = KNA1-LAND1.
          "///"
          CUSTOMER-BILLING_ADDRESS = BILL_CUSTOMER.
          CUSTOMER-SHIPPING_ADDRESS = BILL_CUSTOMER.
          CALL FUNCTION 'ZEBIZ_ADDCUSTOMER'
            EXPORTING
              CUSTOMER          = CUSTOMER
            IMPORTING
              SUCCESSS          = SUCCESS
              CUSTOMER_RESPONSE = CUSTOMER_RESPONSE.
          IF CUSTOMER_RESPONSE-STATUS_CODE <> '1'.
            MESSAGE CUSTOMER_RESPONSE-ERROR TYPE 'E'.
          ELSEIF CUSTOMER_RESPONSE-STATUS_CODE = '1'.
              CUSTOMER-CUSTOMER_INTERNAL_ID = CUSTOMER_RESPONSE-CUSTOMER_INTERNAL_ID.
          ENDIF.
        ELSE.
          CUSTOMER-CUSTOMER_ID = KNA1-KUNNR.
          CUSTOMER-FIRST_NAME = KNA1-NAME1.
          CUSTOMER-LAST_NAME = KNA1-NAME2.
          CUSTOMER-PHONE = KNA1-TELF2.
          CUSTOMER-CELL_PHONE = KNA1-TELF1.
          CUSTOMER-FAX = KNA1-TELFX.
          CUSTOMER-EMAIL = CWA_AD6-SMTP_ADDR.
          "/// Billing Adrress Information
          BILL_CUSTOMER-FIRST_NAME = KNA1-NAME1.
          BILL_CUSTOMER-LAST_NAME = KNA1-NAME2.
          BILL_CUSTOMER-ADDRESS1 = KNA1-STRAS.
          BILL_CUSTOMER-CITY = KNA1-ORT01.
          BILL_CUSTOMER-STATE = KNA1-REGIO.
          BILL_CUSTOMER-ZIP_CODE = KNA1-PSTLZ.
          BILL_CUSTOMER-COUNTRY = KNA1-LAND1.
          "///"
          CUSTOMER-BILLING_ADDRESS = BILL_CUSTOMER.
          CUSTOMER-SHIPPING_ADDRESS = BILL_CUSTOMER.
          CALL FUNCTION 'ZEBIZ_UPDATECUSTOMER'
            EXPORTING
              CUSTOMER             = CUSTOMER
              CUSTOMER_ID          = CUSTOMER-CUSTOMER_ID
              CUSTOMER_INTERNAL_ID = CUSTOMER-CUSTOMER_INTERNAL_ID
            IMPORTING
              SUCCESSS             = SUCCESS
              CUSTOMER_RESPONSE    = CUSTOMER_RESPONSE.
          IF CUSTOMER_RESPONSE-STATUS_CODE <> '1'.
            MESSAGE CUSTOMER_RESPONSE-ERROR TYPE 'E'.
          ENDIF.

        ENDIF.

*    READ TABLE CT INTO CWA INDEX EBIZ_TABLE-CURRENT_LINE.
*    SELECT SINGLE CUSTOMERID  FROM ZEBIZ_CUSTOMER INTO  C_CORSE
*       WHERE CUSTOMERID = KNA1-KUNNR
*      .
        CALL FUNCTION 'ZEBIZ_GETMERCHANTTRANSACTIONDA'
          IMPORTING
            GET_MERCHANT_TRANSACTION_DATA = MERCHANT.
        IF MERCHANT-ENABLE_AVSWARNINGS = 'X' OR MERCHANT-ENABLE_CVVWARNINGS = 'X'.
          CALL FUNCTION 'ZEBIZ_RUNTRANSACTIONS'
            EXPORTING
              TRAN                   = TRAN
            IMPORTING
              RUN_TRANSACTION_RESULT = RUN_TRANSACTION_RESULT.
          CLEAR ERR.
          ERR = RUN_TRANSACTION_RESULT-ERROR.
          TRANSLATE ERR TO LOWER CASE.

          IF RUN_TRANSACTION_RESULT-RESULT_CODE EQ 'A' OR ERR EQ 'approved' .
            CLEAR TRAN.
            TRAN-COMMAND = 'creditvoid'.
            TRAN-REF_NUM = RUN_TRANSACTION_RESULT-REF_NUM.

            CALL FUNCTION 'ZEBIZ_RUNTRANSACTIONS'
              EXPORTING
                TRAN                   = TRAN
              IMPORTING
                RUN_TRANSACTION_RESULT = RUN_TRANSACTION_RESULT_VOID.
            IF RUN_TRANSACTION_RESULT_VOID-RESULT_CODE = 'E'.
              MESSAGE RUN_TRANSACTION_RESULT_VOID-ERROR TYPE 'I'.
            ENDIF.
            CALL FUNCTION 'ZHANDLERESPONSE_CUSTOMER'
              EXPORTING
                RUN_CUSTOMER_TRANSACTION_RESUL = RUN_TRANSACTION_RESULT
              IMPORTING
                RESULT                         = RESULT.
            IF RESULT = 'X'.
              CONVERT DATE LV_DATE TIME LV_TIME INTO TIME STAMP TSTP TIME ZONE GDATE .
              CUSTOMERPRM-METHOD_TYPE = 'check'.
              CUSTOMERPRM-METHOD_NAME = ZEBIZ_CUSTOMER-METHOD_NAME.
              CUSTOMERPRM-CREATED = TSTP.
              CUSTOMERPRM-MODIFIED = TSTP.
              CUSTOMERPRM-ACCOUNT = ZEBIZ_CUSTOMER-ACCOUNT.
              CUSTOMERPRM-ROUTING = ZEBIZ_CUSTOMER-ROUTING.
              CUSTOMERPRM-ACCOUNT_TYPE = ZEBIZ_CUSTOMER-ACCOUNT_TYPE.
              CUSTOMERPRM-ACCOUNT_HOLDER_NAME = ZEBIZ_CUSTOMER-ACCTHOLD.
              CUSTOMERPRM-AVS_STREET = ZEBIZ_CUSTOMER-ADDRESS.
              CUSTOMERPRM-AVS_ZIP = ZEBIZ_CUSTOMER-ZIP.
              CUSTOMERPRM-CARD_CODE = ZEBIZ_CUSTOMER-CARDCODE.
              CALL FUNCTION 'ZEBIZ_ADDCUSTOMERPROFILEMETHOD'
                EXPORTING
                  CUSTOMERPRM                    = CUSTOMERPRM
                  CUSTOMER_INTERNAL_ID           = CUSTOMER_RESPONSE-CUSTOMER_INTERNAL_ID
                IMPORTING
                  SUCCESSS                       = SUCCESS
                  ADD_CUSTOMER_PAYMENT_METHOD_PR = ADD_CUSTOMER_PAYMENT_METHOD_PR.
              IF SUCCESS = 'Y'.
                MSG = ADD_CUSTOMER_PAYMENT_METHOD_PR.
                MESSAGE  W398(00) WITH MSG.
              ELSEIF SUCCESS = 'X'.
                CALL FUNCTION 'ZEBIZ_GETPAYMENTMETHOD'
                  EXPORTING
                    CUSTOMER_ID                    = CUSTOMERID
                    PAYMENT_METHOD_ID              = ADD_CUSTOMER_PAYMENT_METHOD_PR
                  IMPORTING
                    GET_CUSTOMER_PAYMENT_METHOD_PR = GET_CUSTOMER_PAYMENT_METHOD_PR.
                IF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'V'.
                  ZEBIZ_CUSTOMER-CARD_NAME = 'VISA'.
                ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'M'.
                  ZEBIZ_CUSTOMER-CARD_NAME = 'Ma'.
                ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'A'.
                  ZEBIZ_CUSTOMER-CARD_NAME = 'Am'.
                ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'DS'.
                  ZEBIZ_CUSTOMER-CARD_NAME = 'Disc'.
                ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = ''.
                  ZEBIZ_CUSTOMER-CARD_NAME = 'eCheck'.
                ELSE.
                  ZEBIZ_CUSTOMER-CARD_NAME = GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE.

                ENDIF.
                ZEBIZ_CUSTOMER-PAYMENT_METHOD = ADD_CUSTOMER_PAYMENT_METHOD_PR.
                IF ZEBIZ_CUSTOMER-DEFAULT_CARD = 'X'.
                  CALL FUNCTION 'ZEBIZ_SETPAYMENTMETHOD_DEFAULT'
                    EXPORTING
                      CUSTOMER_ID                    = CUSTOMERID
                      PAYMENT_METHOD_ID              = ZEBIZ_CUSTOMER-PAYMENT_METHOD
                    IMPORTING
                      SET_DEFAULT_CUSTOMER_PAYMENT_M = SET_DEFAULT_CUSTOMER_PAYMENT_M.

                ENDIF.
              ENDIF.

              CALL FUNCTION 'NUMBER_GET_NEXT'
                EXPORTING
                  NR_RANGE_NR             = '01'
                  OBJECT                  = 'ZTRANS'
                IMPORTING
                  NUMBER                  = IMX
                EXCEPTIONS
                  INTERVAL_NOT_FOUND      = 1
                  NUMBER_RANGE_NOT_INTERN = 2
                  OBJECT_NOT_FOUND        = 3
                  QUANTITY_IS_0           = 4
                  QUANTITY_IS_NOT_1       = 5
                  INTERVAL_OVERFLOW       = 6
                  BUFFER_OVERFLOW         = 7
                  OTHERS                  = 8.
              CWA-TRANSENTERY = IMX.
              CWA-CUSTOMERID = KNA1-KUNNR.
              CWA-ACTIVE = ZEBIZ_CUSTOMER-ACTIVE.
              CWA-DEFAULT_CARD = ZEBIZ_CUSTOMER-DEFAULT_CARD.
              CWA-PAYMENT_METHOD = ZEBIZ_CUSTOMER-PAYMENT_METHOD.
              CWA-CARDNUMBER = ZEBIZ_CUSTOMER-CARDNUMBER.
              CWA-EXPDATE = ZEBIZ_CUSTOMER-EXPDATE.
              CWA-CARDCODE = ZEBIZ_CUSTOMER-CARDCODE.
              CWA-ACCTHOLD = ZEBIZ_CUSTOMER-ACCTHOLD.
              CWA-ACCOUNT = ZEBIZ_CUSTOMER-ACCOUNT.
              CWA-ROUTING = ZEBIZ_CUSTOMER-ROUTING.
              CWA-ADDRESS = ZEBIZ_CUSTOMER-ADDRESS.
              CWA-CITY = ZEBIZ_CUSTOMER-CITY.
              CWA-STATE = ZEBIZ_CUSTOMER-STATE.
              CWA-ZIP = ZEBIZ_CUSTOMER-ZIP.
              CWA-EMAIL = ZEBIZ_CUSTOMER-EMAIL.
              CWA-METHOD_NAME = ZEBIZ_CUSTOMER-METHOD_NAME.
              CWA-CARD_NAME = ZEBIZ_CUSTOMER-CARD_NAME.
              CWA-ACCOUNT_TYPE = ZEBIZ_CUSTOMER-ACCOUNT_TYPE.

              INSERT INTO ZEBIZ_CUSTOMER VALUES CWA.
              MESSAGE 'Customer Ebiz Data Save' TYPE 'S'.
            ELSE.
              RETURN.
            ENDIF.
          ELSE.
            CLEAR TRAN.
            TRAN-COMMAND = 'creditvoid'.
            TRAN-REF_NUM = RUN_TRANSACTION_RESULT-REF_NUM.

            CALL FUNCTION 'ZEBIZ_RUNTRANSACTIONS'
              EXPORTING
                TRAN                   = TRAN
              IMPORTING
                RUN_TRANSACTION_RESULT = RUN_TRANSACTION_RESULT_VOID.
            IF RUN_TRANSACTION_RESULT_VOID-RESULT_CODE = 'E'.
              MESSAGE RUN_TRANSACTION_RESULT_VOID-ERROR TYPE 'I'.
            ENDIF.
            IF ZEBIZ_CUSTOMER-ACCOUNT <> ''.
              CALL FUNCTION 'POPUP_FOR_INTERACTION'
                EXPORTING
                  HEADLINE = 'Decline'
                  TEXT1    = 'Check Decline.'
                  TEXT2    = ''
                  TEXT3    = RUN_TRANSACTION_RESULT-ERROR
                  BUTTON_1 = 'OK'.
              VAL = '-1'.
              RETURN.
            ENDIF.
          ENDIF.

        ELSE.
          CONVERT DATE LV_DATE TIME LV_TIME INTO TIME STAMP TSTP TIME ZONE GDATE .
          CUSTOMERPRM-METHOD_TYPE = 'check'.
          CUSTOMERPRM-METHOD_NAME = ZEBIZ_CUSTOMER-METHOD_NAME.
          CUSTOMERPRM-CREATED = TSTP.
          CUSTOMERPRM-MODIFIED = TSTP.
          CUSTOMERPRM-ACCOUNT = ZEBIZ_CUSTOMER-ACCOUNT.
          CUSTOMERPRM-ROUTING = ZEBIZ_CUSTOMER-ROUTING.
          CUSTOMERPRM-ACCOUNT_TYPE = ZEBIZ_CUSTOMER-ACCOUNT_TYPE.
          CUSTOMERPRM-ACCOUNT_HOLDER_NAME = ZEBIZ_CUSTOMER-ACCTHOLD.
          CUSTOMERPRM-AVS_STREET = ZEBIZ_CUSTOMER-ADDRESS.
          CUSTOMERPRM-AVS_ZIP = ZEBIZ_CUSTOMER-ZIP.
          CUSTOMERPRM-CARD_CODE = ZEBIZ_CUSTOMER-CARDCODE.
          CALL FUNCTION 'ZEBIZ_ADDCUSTOMERPROFILEMETHOD'
            EXPORTING
              CUSTOMERPRM                    = CUSTOMERPRM
              CUSTOMER_INTERNAL_ID           = CUSTOMER_RESPONSE-CUSTOMER_INTERNAL_ID
            IMPORTING
              SUCCESSS                       = SUCCESS
              ADD_CUSTOMER_PAYMENT_METHOD_PR = ADD_CUSTOMER_PAYMENT_METHOD_PR.
          IF SUCCESS = 'Y'.
            MSG = ADD_CUSTOMER_PAYMENT_METHOD_PR.
            MESSAGE  W398(00) WITH MSG.
          ELSEIF SUCCESS = 'X'.
            CALL FUNCTION 'ZEBIZ_GETPAYMENTMETHOD'
              EXPORTING
                CUSTOMER_ID                    = CUSTOMERID
                PAYMENT_METHOD_ID              = ADD_CUSTOMER_PAYMENT_METHOD_PR
              IMPORTING
                GET_CUSTOMER_PAYMENT_METHOD_PR = GET_CUSTOMER_PAYMENT_METHOD_PR.
            IF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'V'.
              ZEBIZ_CUSTOMER-CARD_NAME = 'VISA'.
            ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'M'.
              ZEBIZ_CUSTOMER-CARD_NAME = 'Ma'.
            ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'A'.
              ZEBIZ_CUSTOMER-CARD_NAME = 'Am'.
            ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'DS'.
              ZEBIZ_CUSTOMER-CARD_NAME = 'Disc'.
            ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = ''.
              ZEBIZ_CUSTOMER-CARD_NAME = 'eCheck'.
            ELSE.
              ZEBIZ_CUSTOMER-CARD_NAME = GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE.

            ENDIF.
            ZEBIZ_CUSTOMER-PAYMENT_METHOD = ADD_CUSTOMER_PAYMENT_METHOD_PR.
            IF ZEBIZ_CUSTOMER-DEFAULT_CARD = 'X'.
              CALL FUNCTION 'ZEBIZ_SETPAYMENTMETHOD_DEFAULT'
                EXPORTING
                  CUSTOMER_ID                    = CUSTOMERID
                  PAYMENT_METHOD_ID              = ZEBIZ_CUSTOMER-PAYMENT_METHOD
                IMPORTING
                  SET_DEFAULT_CUSTOMER_PAYMENT_M = SET_DEFAULT_CUSTOMER_PAYMENT_M.

            ENDIF.
          ENDIF.

          CALL FUNCTION 'NUMBER_GET_NEXT'
            EXPORTING
              NR_RANGE_NR             = '01'
              OBJECT                  = 'ZTRANS'
            IMPORTING
              NUMBER                  = IMX
            EXCEPTIONS
              INTERVAL_NOT_FOUND      = 1
              NUMBER_RANGE_NOT_INTERN = 2
              OBJECT_NOT_FOUND        = 3
              QUANTITY_IS_0           = 4
              QUANTITY_IS_NOT_1       = 5
              INTERVAL_OVERFLOW       = 6
              BUFFER_OVERFLOW         = 7
              OTHERS                  = 8.
          CWA-TRANSENTERY = IMX.
          CWA-CUSTOMERID = KNA1-KUNNR.
          CWA-ACTIVE = ZEBIZ_CUSTOMER-ACTIVE.
          CWA-DEFAULT_CARD = ZEBIZ_CUSTOMER-DEFAULT_CARD.
          CWA-PAYMENT_METHOD = ZEBIZ_CUSTOMER-PAYMENT_METHOD.
          CWA-CARDNUMBER = ZEBIZ_CUSTOMER-CARDNUMBER.
          CWA-EXPDATE = ZEBIZ_CUSTOMER-EXPDATE.
          CWA-CARDCODE = ZEBIZ_CUSTOMER-CARDCODE.
          CWA-ACCTHOLD = ZEBIZ_CUSTOMER-ACCTHOLD.
          CWA-ACCOUNT = ZEBIZ_CUSTOMER-ACCOUNT.
          CWA-ROUTING = ZEBIZ_CUSTOMER-ROUTING.
          CWA-ADDRESS = ZEBIZ_CUSTOMER-ADDRESS.
          CWA-CITY = ZEBIZ_CUSTOMER-CITY.
          CWA-STATE = ZEBIZ_CUSTOMER-STATE.
          CWA-ZIP = ZEBIZ_CUSTOMER-ZIP.
          CWA-EMAIL = ZEBIZ_CUSTOMER-EMAIL.
          CWA-METHOD_NAME = ZEBIZ_CUSTOMER-METHOD_NAME.
          CWA-CARD_NAME = ZEBIZ_CUSTOMER-CARD_NAME.
          CWA-ACCOUNT_TYPE = ZEBIZ_CUSTOMER-ACCOUNT_TYPE.

          INSERT INTO ZEBIZ_CUSTOMER VALUES CWA.
          MESSAGE 'Customer Ebiz Data Save' TYPE 'S'.
        ENDIF.
      CATCH CX_AI_SYSTEM_FAULT INTO EXC.
        MSG = EXC->GET_TEXT( ).
        MESSAGE  W398(00) WITH MSG.
*CATCH zcx_zsqrt_exception.
      CATCH CX_AI_APPLICATION_FAULT INTO EXC.
        MSG = EXC->GET_TEXT( ).
        MESSAGE  W398(00) WITH MSG.
    ENDTRY.
    ZEBIZ_CUSTOMER-TRANSENTERY = 0.
    ZEBIZ_CUSTOMER-ACTIVE = ''.
    ZEBIZ_CUSTOMER-DEFAULT_CARD = ''.
    ZEBIZ_CUSTOMER-CARDNUMBER = ''.
    ZEBIZ_CUSTOMER-EXPDATE = ''.
    ZEBIZ_CUSTOMER-CARDCODE = ''.
    ZEBIZ_CUSTOMER-ACCTHOLD = ''.
    ZEBIZ_CUSTOMER-ADDRESS = ''.
    ZEBIZ_CUSTOMER-CITY = ''.
    ZEBIZ_CUSTOMER-STATE = ''.
    ZEBIZ_CUSTOMER-ZIP = ''.
    ZEBIZ_CUSTOMER-EMAIL = ''.
    ZEBIZ_CUSTOMER-METHOD_NAME = ''.
    ZEBIZ_CUSTOMER-CARD_NAME = ''.
    CLEAR ZEBIZ_CUSTOMER.
  ENDIF.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  SAVE_COMMAND_4016  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE SAVE_COMMAND_4016 INPUT.
  IF SY-UCOMM = 'FCT_SAVE3'.
    LV_DATE = SY-DATUM.
    LV_TIME = SY-UZEIT.
    CLEAR C_CORSE.
    CLEAR IMX.
*    CLEAR LINID.
    IMX = 0.
*    LINID = 0.

    TRY.
        CALL FUNCTION 'POPUP_TO_CONFIRM'
          EXPORTING
            TITLEBAR              = 'Save Payment Method'
            TEXT_QUESTION         = 'Do you want to save payment method ?'
            TEXT_BUTTON_1         = 'Yes'
            ICON_BUTTON_1         = 'ICON_CHECKED'
            TEXT_BUTTON_2         = 'No'
            ICON_BUTTON_2         = 'ICON_CANCEL'
            DISPLAY_CANCEL_BUTTON = ' '
            POPUP_TYPE            = 'ICON_MESSAGE_ERROR'
          IMPORTING
            ANSWER                = ANS.
        IF ANS = '2'.
          RETURN.
        ENDIF.
        IF ZEBIZ_CUSTOMER-ACCTHOLD = ''.
          MESSAGE 'Please enter acct. holder name' TYPE 'I'.
          VAL = '-2'.
          RETURN.
        ELSEIF ZEBIZ_CUSTOMER-ROUTING = ''.
          MESSAGE 'Please enter routing No' TYPE 'I'.
          VAL = '-2'.
          RETURN.
        ELSEIF ZEBIZ_CUSTOMER-ACCOUNT_TYPE = ''.
          MESSAGE 'Please select account type' TYPE 'I'.
          VAL = '-2'.
          CLEAR SY-UCOMM.
          RETURN.
        ELSEIF ZEBIZ_CUSTOMER-ACCOUNT = ''.
          MESSAGE 'Please enter account No' TYPE 'I'.
          VAL = '-2'.
          CLEAR SY-UCOMM.
          RETURN.
        ELSE.
*            IF STRLEN( ZEBIZ_CUSTOMER-ACCOUNT ) <> 12.
*              MESSAGE 'Accounter No. Must be 12 characters long' TYPE 'I'.
*              RETURN.
*            ELSEIF STRLEN( ZEBIZ_CUSTOMER-ROUTING ) <> 9.
*              MESSAGE 'ROUTING No. Must be 9 characters long' TYPE 'I'.
*              RETURN.
*            ENDIF.

        ENDIF.

        CUSTOMERID = KNA1-KUNNR.
        CALL FUNCTION 'ZEBIZ_CHECKCUSTOMER'
          EXPORTING
            CUSTOMER_ID         = CUSTOMERID
          IMPORTING
            FOUND               = FOUND
            GET_CUSTOMER_RESULT = CUSTOMER.
        SELECT SINGLE *  FROM ADR6 INTO  CWA_AD6
  WHERE ADDRNUMBER = KNA1-ADRNR.
        IF FOUND = 'N'.

          CUSTOMER-CUSTOMER_ID = KNA1-KUNNR.
          CUSTOMER-FIRST_NAME = KNA1-NAME1.
          CUSTOMER-LAST_NAME = KNA1-NAME2.
          CUSTOMER-PHONE = KNA1-TELF2.
          CUSTOMER-CELL_PHONE = KNA1-TELF1.
          CUSTOMER-FAX = KNA1-TELFX.
          CUSTOMER-EMAIL = CWA_AD6-SMTP_ADDR.
          "/// Billing Adrress Information
          BILL_CUSTOMER-FIRST_NAME = KNA1-NAME1.
          BILL_CUSTOMER-LAST_NAME = KNA1-NAME2.
          BILL_CUSTOMER-ADDRESS1 = KNA1-STRAS.
          BILL_CUSTOMER-CITY = KNA1-ORT01.
          BILL_CUSTOMER-STATE = KNA1-REGIO.
          BILL_CUSTOMER-ZIP_CODE = KNA1-PSTLZ.
          BILL_CUSTOMER-COUNTRY = KNA1-LAND1.
          "///"
          CUSTOMER-BILLING_ADDRESS = BILL_CUSTOMER.
          CUSTOMER-SHIPPING_ADDRESS = BILL_CUSTOMER.
          CALL FUNCTION 'ZEBIZ_ADDCUSTOMER'
            EXPORTING
              CUSTOMER          = CUSTOMER
            IMPORTING
              SUCCESSS          = SUCCESS
              CUSTOMER_RESPONSE = CUSTOMER_RESPONSE.
          IF CUSTOMER_RESPONSE-STATUS_CODE <> '1'.
            MESSAGE CUSTOMER_RESPONSE-ERROR TYPE 'E'.
          ELSEIF CUSTOMER_RESPONSE-STATUS_CODE = '1'.

            CONVERT DATE LV_DATE TIME LV_TIME INTO TIME STAMP TSTP TIME ZONE GDATE .
            CUSTOMERPRM-METHOD_TYPE = 'check'.
            CUSTOMERPRM-METHOD_NAME = ZEBIZ_CUSTOMER-METHOD_NAME.
            CUSTOMERPRM-CREATED = TSTP.
            CUSTOMERPRM-MODIFIED = TSTP.
            CUSTOMERPRM-ACCOUNT = ZEBIZ_CUSTOMER-ACCOUNT.
            CUSTOMERPRM-ROUTING = ZEBIZ_CUSTOMER-ROUTING.
            CUSTOMERPRM-ACCOUNT_TYPE = ZEBIZ_CUSTOMER-ACCOUNT_TYPE.
            CUSTOMERPRM-ACCOUNT_HOLDER_NAME = ZEBIZ_CUSTOMER-ACCTHOLD.
            CUSTOMERPRM-AVS_STREET = ZEBIZ_CUSTOMER-ADDRESS.
            CUSTOMERPRM-AVS_ZIP = ZEBIZ_CUSTOMER-ZIP.
            CUSTOMERPRM-CARD_CODE = ZEBIZ_CUSTOMER-CARDCODE.
*              CUSTOMERPRM-CARD_EXPIRATION = EDATE.
*              CUSTOMERPRM-CARD_NUMBER = ZEBIZ_CUSTOMER-CARDNUMBER.

            CALL FUNCTION 'ZEBIZ_ADDCUSTOMERPROFILEMETHOD'
              EXPORTING
                CUSTOMERPRM                    = CUSTOMERPRM
                CUSTOMER_INTERNAL_ID           = CUSTOMER_RESPONSE-CUSTOMER_INTERNAL_ID
              IMPORTING
                SUCCESSS                       = SUCCESS
                ADD_CUSTOMER_PAYMENT_METHOD_PR = ADD_CUSTOMER_PAYMENT_METHOD_PR.
            IF SUCCESS = 'Y'.
              MSG = ADD_CUSTOMER_PAYMENT_METHOD_PR.
              MESSAGE  W398(00) WITH MSG.
            ELSEIF SUCCESS = 'X'.
              CALL FUNCTION 'ZEBIZ_GETPAYMENTMETHOD'
                EXPORTING
                  CUSTOMER_ID                    = CUSTOMERID
                  PAYMENT_METHOD_ID              = ADD_CUSTOMER_PAYMENT_METHOD_PR
                IMPORTING
                  GET_CUSTOMER_PAYMENT_METHOD_PR = GET_CUSTOMER_PAYMENT_METHOD_PR.

              ZEBIZ_CUSTOMER-PAYMENT_METHOD = ADD_CUSTOMER_PAYMENT_METHOD_PR.
              IF ZEBIZ_CUSTOMER-DEFAULT_CARD = 'X'.
                CALL FUNCTION 'ZEBIZ_SETPAYMENTMETHOD_DEFAULT'
                  EXPORTING
                    CUSTOMER_ID                    = CUSTOMERID
                    PAYMENT_METHOD_ID              = ZEBIZ_CUSTOMER-PAYMENT_METHOD
                  IMPORTING
                    SET_DEFAULT_CUSTOMER_PAYMENT_M = SET_DEFAULT_CUSTOMER_PAYMENT_M.

              ENDIF.
            ENDIF.
          ENDIF.
        ELSE.
          CUSTOMER-CUSTOMER_ID = KNA1-KUNNR.
          CUSTOMER-FIRST_NAME = KNA1-NAME1.
          CUSTOMER-LAST_NAME = KNA1-NAME2.
          CUSTOMER-PHONE = KNA1-TELF2.
          CUSTOMER-CELL_PHONE = KNA1-TELF1.
          CUSTOMER-FAX = KNA1-TELFX.
          CUSTOMER-EMAIL = CWA_AD6-SMTP_ADDR.
          "/// Billing Adrress Information
          BILL_CUSTOMER-FIRST_NAME = KNA1-NAME1.
          BILL_CUSTOMER-LAST_NAME = KNA1-NAME2.
          BILL_CUSTOMER-ADDRESS1 = KNA1-STRAS.
          BILL_CUSTOMER-CITY = KNA1-ORT01.
          BILL_CUSTOMER-STATE = KNA1-REGIO.
          BILL_CUSTOMER-ZIP_CODE = KNA1-PSTLZ.
          BILL_CUSTOMER-COUNTRY = KNA1-LAND1.
          "///"
          CUSTOMER-BILLING_ADDRESS = BILL_CUSTOMER.
          CUSTOMER-SHIPPING_ADDRESS = BILL_CUSTOMER.
          CALL FUNCTION 'ZEBIZ_UPDATECUSTOMER'
            EXPORTING
              CUSTOMER             = CUSTOMER
              CUSTOMER_ID          = CUSTOMER-CUSTOMER_ID
              CUSTOMER_INTERNAL_ID = CUSTOMER-CUSTOMER_INTERNAL_ID
            IMPORTING
              SUCCESSS             = SUCCESS
              CUSTOMER_RESPONSE    = CUSTOMER_RESPONSE.
          IF CUSTOMER_RESPONSE-STATUS_CODE <> '1'.
            MESSAGE CUSTOMER_RESPONSE-ERROR TYPE 'E'.
          ENDIF.

        ENDIF.
      CATCH CX_AI_SYSTEM_FAULT INTO EXC.
        MSG = EXC->GET_TEXT( ).
        MESSAGE  W398(00) WITH MSG.
*CATCH zcx_zsqrt_exception.
      CATCH CX_AI_APPLICATION_FAULT INTO EXC.
        MSG = EXC->GET_TEXT( ).
        MESSAGE  W398(00) WITH MSG.
    ENDTRY.
*    READ TABLE CT INTO CWA INDEX EBIZ_TABLE-CURRENT_LINE.
*    SELECT SINGLE CUSTOMERID  FROM ZEBIZ_CUSTOMER INTO  C_CORSE
*       WHERE CUSTOMERID = KNA1-KUNNR
*      .
    IF TRANSENTRY > 0.
      CONVERT DATE LV_DATE TIME LV_TIME INTO TIME STAMP TSTP TIME ZONE GDATE .

      CUSTOMERPRM-METHOD_TYPE = 'check'.
      CUSTOMERPRM-ACCOUNT = ZEBIZ_CUSTOMER-ACCOUNT.
      CUSTOMERPRM-ROUTING = ZEBIZ_CUSTOMER-ROUTING.
      CUSTOMERPRM-ACCOUNT_TYPE = ZEBIZ_CUSTOMER-ACCOUNT_TYPE.

      CUSTOMERPRM-METHOD_ID = ZEBIZ_CUSTOMER-PAYMENT_METHOD.
      CUSTOMERPRM-METHOD_NAME = ZEBIZ_CUSTOMER-METHOD_NAME.
      CUSTOMERPRM-AVS_STREET = ZEBIZ_CUSTOMER-ADDRESS.
      CUSTOMERPRM-AVS_ZIP = ZEBIZ_CUSTOMER-ZIP.

      CUSTOMERPRM-ACCOUNT_HOLDER_NAME = ZEBIZ_CUSTOMER-ACCTHOLD.
      CUSTOMERPRM-CARD_CODE = ZEBIZ_CUSTOMER-CARDCODE.
      CUSTOMERPRM-CREATED = TSTP.
      CUSTOMERPRM-MODIFIED = TSTP.
      CUSTOMERPRM-BALANCE = 0.
      CUSTOMERPRM-MAX_BALANCE = 0.

      CALL FUNCTION 'ZEBIZ_UPDATECUSTOMERPAYMETHOD'
        EXPORTING
          CUSTOMERPRM                    = CUSTOMERPRM
          CUSTOMER_ID                    = CUSTOMERID
        IMPORTING
          SUCCESSS                       = SUCCESS
          UPDATE_CUSTOMER_PAYMENT_METHOD = UPDATE_CUSTOMER_PAYMENT_METHOD.
      IF SUCCESS = 'Y'.
        MSG = UPDATE_CUSTOMER_PAYMENT_METHOD.
        MESSAGE  W398(00) WITH MSG.
      ELSEIF SUCCESS = 'X'.

        PAYMENT_METHOD_ID = ZEBIZ_CUSTOMER-PAYMENT_METHOD.
        CALL FUNCTION 'ZEBIZ_GETPAYMENTMETHOD'
          EXPORTING
            CUSTOMER_ID                    = CUSTOMERID
            PAYMENT_METHOD_ID              = PAYMENT_METHOD_ID
          IMPORTING
            GET_CUSTOMER_PAYMENT_METHOD_PR = GET_CUSTOMER_PAYMENT_METHOD_PR.
        IF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'V'.
          ZEBIZ_CUSTOMER-CARD_NAME = 'VISA'.
        ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'M'.
          ZEBIZ_CUSTOMER-CARD_NAME = 'Ma'.
        ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'A'.
          ZEBIZ_CUSTOMER-CARD_NAME = 'Am'.
        ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'DS'.
          ZEBIZ_CUSTOMER-CARD_NAME = 'Disc'.
        ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = ''.
          ZEBIZ_CUSTOMER-CARD_NAME = 'eCheck'.
        ELSE.
          ZEBIZ_CUSTOMER-CARD_NAME = GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE.

        ENDIF.
        IF ZEBIZ_CUSTOMER-DEFAULT_CARD = 'X'.
          CALL FUNCTION 'ZEBIZ_SETPAYMENTMETHOD_DEFAULT'
            EXPORTING
              CUSTOMER_ID                    = CUSTOMERID
              PAYMENT_METHOD_ID              = ZEBIZ_CUSTOMER-PAYMENT_METHOD
            IMPORTING
              SET_DEFAULT_CUSTOMER_PAYMENT_M = SET_DEFAULT_CUSTOMER_PAYMENT_M.

        ENDIF.
      ENDIF.
      CWA-TRANSENTERY = TRANSENTRY.
      CWA-CUSTOMERID = ZEBIZ_CUSTOMER-CUSTOMERID.
      CWA-ACTIVE = ZEBIZ_CUSTOMER-ACTIVE.
      CWA-DEFAULT_CARD = ZEBIZ_CUSTOMER-DEFAULT_CARD.
      CWA-PAYMENT_METHOD = ZEBIZ_CUSTOMER-PAYMENT_METHOD.
      CWA-CARDNUMBER = ZEBIZ_CUSTOMER-CARDNUMBER.
      CWA-EXPDATE = ZEBIZ_CUSTOMER-EXPDATE.
      CWA-CARDCODE = ZEBIZ_CUSTOMER-CARDCODE.
      CWA-ACCTHOLD = ZEBIZ_CUSTOMER-ACCTHOLD.
      CWA-ACCOUNT = ZEBIZ_CUSTOMER-ACCOUNT.
      CWA-ROUTING = ZEBIZ_CUSTOMER-ROUTING.
      CWA-ADDRESS = ZEBIZ_CUSTOMER-ADDRESS.
      CWA-CITY = ZEBIZ_CUSTOMER-CITY.
      CWA-STATE = ZEBIZ_CUSTOMER-STATE.
      CWA-ZIP = ZEBIZ_CUSTOMER-ZIP.
      CWA-EMAIL = ZEBIZ_CUSTOMER-EMAIL.
      CWA-METHOD_NAME = ZEBIZ_CUSTOMER-METHOD_NAME.
      CWA-CARD_NAME = ZEBIZ_CUSTOMER-CARD_NAME.
      CWA-ACCOUNT_TYPE = ZEBIZ_CUSTOMER-ACCOUNT_TYPE.

      MODIFY ZEBIZ_CUSTOMER FROM CWA.
      MESSAGE 'Customer Ebiz Data Save' TYPE 'S'.
    ELSE.
      CONVERT DATE LV_DATE TIME LV_TIME INTO TIME STAMP TSTP TIME ZONE GDATE .
      CUSTOMERPRM-METHOD_TYPE = 'check'.
      CUSTOMERPRM-ACCOUNT = ZEBIZ_CUSTOMER-ACCOUNT.
      CUSTOMERPRM-ROUTING = ZEBIZ_CUSTOMER-ROUTING.
      CUSTOMERPRM-ACCOUNT_TYPE = ZEBIZ_CUSTOMER-ACCOUNT_TYPE.

      CUSTOMERPRM-METHOD_ID = ZEBIZ_CUSTOMER-PAYMENT_METHOD.
      CUSTOMERPRM-METHOD_NAME = ZEBIZ_CUSTOMER-METHOD_NAME.
      CUSTOMERPRM-AVS_STREET = ZEBIZ_CUSTOMER-ADDRESS.
      CUSTOMERPRM-AVS_ZIP = ZEBIZ_CUSTOMER-ZIP.

      CUSTOMERPRM-ACCOUNT_HOLDER_NAME = ZEBIZ_CUSTOMER-ACCTHOLD.
      CUSTOMERPRM-CARD_CODE = ZEBIZ_CUSTOMER-CARDCODE.
      CUSTOMERPRM-CREATED = TSTP.
      CUSTOMERPRM-MODIFIED = TSTP.
      CUSTOMERPRM-BALANCE = 0.
      CUSTOMERPRM-MAX_BALANCE = 0.

      CALL FUNCTION 'ZEBIZ_UPDATECUSTOMERPAYMETHOD'
        EXPORTING
          CUSTOMERPRM                    = CUSTOMERPRM
          CUSTOMER_ID                    = CUSTOMERID
        IMPORTING
          SUCCESSS                       = SUCCESS
          UPDATE_CUSTOMER_PAYMENT_METHOD = UPDATE_CUSTOMER_PAYMENT_METHOD.
      IF SUCCESS = 'Y'.
        MSG = UPDATE_CUSTOMER_PAYMENT_METHOD.
        MESSAGE  W398(00) WITH MSG.
      ELSEIF SUCCESS = 'X'.

        PAYMENT_METHOD_ID = ZEBIZ_CUSTOMER-PAYMENT_METHOD.
        CALL FUNCTION 'ZEBIZ_GETPAYMENTMETHOD'
          EXPORTING
            CUSTOMER_ID                    = CUSTOMERID
            PAYMENT_METHOD_ID              = PAYMENT_METHOD_ID
          IMPORTING
            GET_CUSTOMER_PAYMENT_METHOD_PR = GET_CUSTOMER_PAYMENT_METHOD_PR.
        IF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'V'.
          ZEBIZ_CUSTOMER-CARD_NAME = 'VISA'.
        ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'M'.
          ZEBIZ_CUSTOMER-CARD_NAME = 'Ma'.
        ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'A'.
          ZEBIZ_CUSTOMER-CARD_NAME = 'Am'.
        ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'DS'.
          ZEBIZ_CUSTOMER-CARD_NAME = 'Disc'.
        ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = ''.
          ZEBIZ_CUSTOMER-CARD_NAME = 'eCheck'.
        ELSE.
          ZEBIZ_CUSTOMER-CARD_NAME = GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE.

        ENDIF.
        IF ZEBIZ_CUSTOMER-DEFAULT_CARD = 'X'.
          CALL FUNCTION 'ZEBIZ_SETPAYMENTMETHOD_DEFAULT'
            EXPORTING
              CUSTOMER_ID                    = CUSTOMERID
              PAYMENT_METHOD_ID              = ZEBIZ_CUSTOMER-PAYMENT_METHOD
            IMPORTING
              SET_DEFAULT_CUSTOMER_PAYMENT_M = SET_DEFAULT_CUSTOMER_PAYMENT_M.

        ENDIF.
      ENDIF.
      CALL FUNCTION 'NUMBER_GET_NEXT'
        EXPORTING
          NR_RANGE_NR             = '01'
          OBJECT                  = 'ZTRANS'
        IMPORTING
          NUMBER                  = IMX
        EXCEPTIONS
          INTERVAL_NOT_FOUND      = 1
          NUMBER_RANGE_NOT_INTERN = 2
          OBJECT_NOT_FOUND        = 3
          QUANTITY_IS_0           = 4
          QUANTITY_IS_NOT_1       = 5
          INTERVAL_OVERFLOW       = 6
          BUFFER_OVERFLOW         = 7
          OTHERS                  = 8.
      CWA-TRANSENTERY = IMX.
      CWA-CUSTOMERID = KNA1-KUNNR.
      CWA-ACTIVE = ZEBIZ_CUSTOMER-ACTIVE.
      CWA-DEFAULT_CARD = ZEBIZ_CUSTOMER-DEFAULT_CARD.
      CWA-PAYMENT_METHOD = ZEBIZ_CUSTOMER-PAYMENT_METHOD.
      CWA-CARDNUMBER = ZEBIZ_CUSTOMER-CARDNUMBER.
      CWA-EXPDATE = ZEBIZ_CUSTOMER-EXPDATE.
      CWA-CARDCODE = ZEBIZ_CUSTOMER-CARDCODE.
      CWA-ACCTHOLD = ZEBIZ_CUSTOMER-ACCTHOLD.
      CWA-ACCOUNT = ZEBIZ_CUSTOMER-ACCOUNT.
      CWA-ROUTING = ZEBIZ_CUSTOMER-ROUTING.
      CWA-ADDRESS = ZEBIZ_CUSTOMER-ADDRESS.
      CWA-CITY = ZEBIZ_CUSTOMER-CITY.
      CWA-STATE = ZEBIZ_CUSTOMER-STATE.
      CWA-ZIP = ZEBIZ_CUSTOMER-ZIP.
      CWA-EMAIL = ZEBIZ_CUSTOMER-EMAIL.
      CWA-METHOD_NAME = ZEBIZ_CUSTOMER-METHOD_NAME.
      CWA-CARD_NAME = ZEBIZ_CUSTOMER-CARD_NAME.
      CWA-ACCOUNT_TYPE = ZEBIZ_CUSTOMER-ACCOUNT_TYPE.

      INSERT INTO ZEBIZ_CUSTOMER VALUES CWA.
      MESSAGE 'Customer Ebiz Data Save' TYPE 'S'.
    ENDIF.

  ENDIF.

ENDMODULE.



MODULE REFRESH_COMMAND_4016 INPUT.
  IF SY-UCOMM = 'FCT_REF1'.
    CLEAR: GS_VALUES, GT_VALUES[], VAL.

    TRY.
        CALL FUNCTION 'ZEBIZ_PAYMENTMETHODS'
          EXPORTING
            CUSTOMER_ID       = CUSTOMERID
          IMPORTING
            PAYMENT_METHOD_PR = WA_GET.
*        GS_VALUES-TEXT = 'New Card'.
*        GS_VALUES-KEY = '-1'.
*        APPEND GS_VALUES TO GT_VALUES.
*        GS_VALUES-TEXT = 'New eCheck'.
*        GS_VALUES-KEY = '-2'.
*        APPEND GS_VALUES TO GT_VALUES.
        LOOP AT WA_GET INTO WA_GET_CUD.
          IF WA_GET_CUD-ACCOUNT <> ''.
            GS_VALUES-TEXT = WA_GET_CUD-ACCOUNT.
            GS_VALUES-KEY = WA_GET_CUD-METHOD_ID.
            APPEND GS_VALUES TO GT_VALUES.
          ENDIF.
        ENDLOOP.
      CATCH CX_AI_SYSTEM_FAULT INTO EXC.
        MSG = EXC->GET_TEXT( ).
        WRITE:/  MSG.
*CATCH zcx_zsqrt_exception.
      CATCH CX_AI_APPLICATION_FAULT INTO EXC.
        MSG = EXC->GET_TEXT( ).
        WRITE:/  MSG.
    ENDTRY.


    GT_ID = 'ZEBIZ_CUSTOMER-PAYMENT_METHOD'.

    CALL FUNCTION 'VRM_SET_VALUES'
      EXPORTING
        ID     = GT_ID
        VALUES = GT_VALUES.
*  EXCEPTIONS
*    ID_ILLEGAL_NAME       = 1
*    OTHERS                = 2
    .
    IF SY-SUBRC <> 0.
* Implement suitable error handling here
    ENDIF.
    CLEAR: GS_VALUES, GT_VALUES[].
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  PAYMETHOD_COMMAND_4010  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE PAYMETHOD_COMMAND_4016 INPUT.
  IF SY-UCOMM = 'FCT_PAY1'.
    VAL = ZEBIZ_CUSTOMER-PAYMENT_METHOD.
    CLEAR: CWA.
    ZEBIZ_CUSTOMER-TRANSENTERY = 0.
    TRANSENTRY = 0.
    ZEBIZ_CUSTOMER-CURRENCY = ''.
    ZEBIZ_CUSTOMER-ACTIVE = ''.
    ZEBIZ_CUSTOMER-DEFAULT_CARD = ''.
    ZEBIZ_CUSTOMER-CARDNUMBER = ''.
    ZEBIZ_CUSTOMER-EXPDATE = ''.
    ZEBIZ_CUSTOMER-CARDCODE = ''.
    ZEBIZ_CUSTOMER-ACCTHOLD = ''.
    ZEBIZ_CUSTOMER-ADDRESS = ''.
    ZEBIZ_CUSTOMER-CITY = ''.
    ZEBIZ_CUSTOMER-STATE = ''.
    ZEBIZ_CUSTOMER-ZIP = ''.
    ZEBIZ_CUSTOMER-EMAIL = ''.
    ZEBIZ_CUSTOMER-METHOD_NAME = ''.
    ZEBIZ_CUSTOMER-CARD_NAME = ''.
    IF VAL = '-1' OR VAL = '-2'.

    ELSE.
      SELECT SINGLE * FROM ZEBIZ_CUSTOMER INTO CWA
WHERE CUSTOMERID = KNA1-KUNNR AND PAYMENT_METHOD = VAL.
      .
      TRY.
          PAYMENT_METHOD_ID = VAL.
          CALL FUNCTION 'ZEBIZ_GETPAYMENTMETHOD'
            EXPORTING
              CUSTOMER_ID                    = CUSTOMERID
              PAYMENT_METHOD_ID              = PAYMENT_METHOD_ID
            IMPORTING
              GET_CUSTOMER_PAYMENT_METHOD_PR = GET_CUSTOMER_PAYMENT_METHOD_PR.


          ZEBIZ_CUSTOMER-PAYMENT_METHOD = GET_CUSTOMER_PAYMENT_METHOD_PR-METHOD_ID.
          ZEBIZ_CUSTOMER-CARDNUMBER = GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_NUMBER.
*              ZEBIZ_CUSTOMER-CARDCODE = GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_CODE.
          ZEBIZ_CUSTOMER-ACCTHOLD = GET_CUSTOMER_PAYMENT_METHOD_PR-ACCOUNT_HOLDER_NAME.
          ZEBIZ_CUSTOMER-ROUTING = GET_CUSTOMER_PAYMENT_METHOD_PR-ROUTING.
          ZEBIZ_CUSTOMER-ACCOUNT = GET_CUSTOMER_PAYMENT_METHOD_PR-ACCOUNT.
          ZEBIZ_CUSTOMER-ADDRESS = GET_CUSTOMER_PAYMENT_METHOD_PR-AVS_STREET.
          ZEBIZ_CUSTOMER-ACCOUNT_TYPE = GET_CUSTOMER_PAYMENT_METHOD_PR-ACCOUNT_TYPE.
          ZEBIZ_CUSTOMER-ZIP = GET_CUSTOMER_PAYMENT_METHOD_PR-AVS_ZIP.
          ZEBIZ_CUSTOMER-METHOD_NAME = GET_CUSTOMER_PAYMENT_METHOD_PR-METHOD_NAME.
          IF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'V'.
            ZEBIZ_CUSTOMER-CARD_NAME = 'VISA'.
          ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'M'.
            ZEBIZ_CUSTOMER-CARD_NAME = 'Ma'.
          ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'A'.
            ZEBIZ_CUSTOMER-CARD_NAME = 'Am'.
          ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'DS'.
            ZEBIZ_CUSTOMER-CARD_NAME = 'Disc'.
          ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = ''.
            ZEBIZ_CUSTOMER-CARD_NAME = 'eCheck'.
          ELSE.
            ZEBIZ_CUSTOMER-CARD_NAME = GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE.

          ENDIF.
          IF GET_CUSTOMER_PAYMENT_METHOD_PR-SECONDARY_SORT = '0'.
            ZEBIZ_CUSTOMER-DEFAULT_CARD = 'X'.
          ELSE.
            ZEBIZ_CUSTOMER-DEFAULT_CARD = ''.
          ENDIF.
        CATCH CX_AI_SYSTEM_FAULT INTO EXC.
          MSG = EXC->GET_TEXT( ).
          WRITE:/  MSG.
*CATCH zcx_zsqrt_exception.
        CATCH CX_AI_APPLICATION_FAULT INTO EXC.
          MSG = EXC->GET_TEXT( ).
          WRITE:/  MSG.
      ENDTRY.

      IF CWA-TRANSENTERY <> ''.
        ZEBIZ_CUSTOMER-TRANSENTERY = CWA-TRANSENTERY.
        TRANSENTRY = CWA-TRANSENTERY.
        ZEBIZ_CUSTOMER-CUSTOMERID = CWA-CUSTOMERID.
        ZEBIZ_CUSTOMER-CURRENCY = CWA-CURRENCY.
        ZEBIZ_CUSTOMER-ACTIVE = CWA-ACTIVE.
        ZEBIZ_CUSTOMER-ADDRESS = CWA-ADDRESS.
        ZEBIZ_CUSTOMER-ZIP = CWA-ZIP.

        ZEBIZ_CUSTOMER-CITY = CWA-CITY.
        ZEBIZ_CUSTOMER-STATE = CWA-STATE.
        ZEBIZ_CUSTOMER-EMAIL = CWA-EMAIL.
      ENDIF.

    ENDIF.
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  F4_DATE  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE F4_DATE INPUT.
  CALL FUNCTION 'F4_DATE'
    EXPORTING
      DATE_FOR_FIRST_MONTH = 4012_FROM_DATE
      DISPLAY              = ' '
    IMPORTING
      SELECT_DATE          = 4012_FROM_DATE
    EXCEPTIONS
      OTHERS               = 4.
  IF SY-SUBRC <> 0.
* Implement suitable error handling here
  ENDIF.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  F4_DATE2  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE F4_DATE2 INPUT.
  CALL FUNCTION 'F4_DATE'
    EXPORTING
      DATE_FOR_FIRST_MONTH = 4012_TO_DATE
      DISPLAY              = ' '
    IMPORTING
      SELECT_DATE          = 4012_TO_DATE
    EXCEPTIONS
      OTHERS               = 4.
  IF SY-SUBRC <> 0.
* Implement suitable error handling here
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  FILL_MATRIX_4012  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE FILL_MATRIX_4012 OUTPUT.
  IF SY-STEPL = 1.
    MATRIX-LINES = MATRIX-TOP_LINE + SY-LOOPC - 1.
  ENDIF.

*  ZEBIZ_CHARGETRANSACTION_OBJECT-Customer_ID = 4012_CWA-Customer_ID.
  MOVE-CORRESPONDING CWA_MATRIX TO ZEBIZ_MATRIX.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  GETDATA_4012  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE GETDATA_BACKUP_4012 OUTPUT.
  IF SY-UCOMM = 'EBIZ_FC3'.
    CUSTOMERID = KNA1-KUNNR.
    CLEAR: IT_OUTTAB[], IT_FLDCAT[].
    CALL FUNCTION 'ZEBIZ_GETPAYMENTTRANSACTIONS'
      EXPORTING
        CUSTOMER_ID                = CUSTOMERID
        FROMDATE                   = ''
        TODATE                     = ''
        ORDERID                    = ''
      IMPORTING
        SEARCH_TRANSACTIONS_RESULT = SEARCH_TRANSACTIONS_RESULT.
    SORT SEARCH_TRANSACTIONS_RESULT-TRANSACTIONS-TRANSACTION_OBJECT BY DATE_TIME DESCENDING.

    LOOP AT SEARCH_TRANSACTIONS_RESULT-TRANSACTIONS-TRANSACTION_OBJECT INTO 4012_CWA.
 if 4012_CWA-TRANSACTION_TYPE = 'Voided Sale' and 4012_CWA-DETAILS-AMOUNT = '  5.0000000000000003E-02'.
      else.
      IT_OUTTAB-4012_CUSTOMER_ID = 4012_CWA-CUSTOMER_ID.
      IT_OUTTAB-4012_INVOICE_ID = 4012_CWA-DETAILS-INVOICE.
      IT_OUTTAB-4012_ORDER_ID = 4012_CWA-DETAILS-ORDER_ID.
      IT_OUTTAB-4012_REF_NUM = 4012_CWA-RESPONSE-REF_NUM.
      IT_OUTTAB-4012_AMOUNT = 4012_CWA-DETAILS-AMOUNT.
      IT_OUTTAB-4012_TRANSACTION_TYPE = 4012_CWA-TRANSACTION_TYPE.
      IT_OUTTAB-4012_AUTH_AMOUNT = 4012_CWA-RESPONSE-AUTH_AMOUNT.
      IT_OUTTAB-4012_STATUS = 4012_CWA-RESPONSE-STATUS.
      IT_OUTTAB-4012_TRANSACTION_STATUS = 4012_CWA-STATUS.
      IT_OUTTAB-4012_DATE = 4012_CWA-DATE_TIME.
      APPEND IT_OUTTAB.
      endif.
    ENDLOOP.
    IT_FLDCAT-FIELDNAME = '4012_CUSTOMER_ID'.
    IT_FLDCAT-REPTEXT   = 'CUSTOMER ID'.
    APPEND IT_FLDCAT.
    IT_FLDCAT-FIELDNAME = '4012_Invoice_ID'.
    IT_FLDCAT-REPTEXT   = 'Inovice ID'.
    APPEND IT_FLDCAT.
    IT_FLDCAT-FIELDNAME = '4012_Order_ID'.
    IT_FLDCAT-REPTEXT   = 'Order ID'.
    APPEND IT_FLDCAT.
    IT_FLDCAT-FIELDNAME = '4012_Ref_Num'.
    IT_FLDCAT-REPTEXT   = 'Ref Num'.
    APPEND IT_FLDCAT.
    IT_FLDCAT-FIELDNAME = '4012_Amount'.
    IT_FLDCAT-REPTEXT   = 'Amount'.
    APPEND IT_FLDCAT.
    IT_FLDCAT-FIELDNAME = '4012_Transaction_Type'.
    IT_FLDCAT-REPTEXT   = 'Transaction Type'.
    APPEND IT_FLDCAT.
    IT_FLDCAT-FIELDNAME = '4012_Auth_Amount'.
    IT_FLDCAT-REPTEXT   = 'Auth Amount'.
    APPEND IT_FLDCAT.
    IT_FLDCAT-FIELDNAME = '4012_Status'.
    IT_FLDCAT-REPTEXT   = 'Status'.
    APPEND IT_FLDCAT.
    IT_FLDCAT-FIELDNAME = '4012_Transaction_Status'.
    IT_FLDCAT-REPTEXT   = 'Transaction Status'.
    APPEND IT_FLDCAT.
    IT_FLDCAT-FIELDNAME = '4012_Date'.
    IT_FLDCAT-REPTEXT   = 'Date'.
    APPEND IT_FLDCAT.
    CREATE OBJECT CONTAINER1
      EXPORTING
        CONTAINER_NAME = 'CUSTOM1'.
    CREATE OBJECT GRID
      EXPORTING
        I_PARENT = CONTAINER1.
    CALL METHOD GRID->SET_TABLE_FOR_FIRST_DISPLAY
*    EXPORTING
*      i_buffer_active               =
*      i_bypassing_buffer            =
*      i_consistency_check           =
*      i_structure_name              =
*      is_variant                    =
*      i_save                        =
*      i_default                     = 'x'
*      is_layout                     =
*      is_print                      =
*      it_special_groups             =
*      it_toolbar_excluding          =
*      it_hyperlink                  =
*      it_alv_graphics               =
*      it_except_qinfo               =
*      ir_salv_adapter               =
      CHANGING
        IT_OUTTAB                     = IT_OUTTAB[]
        IT_FIELDCATALOG               = IT_FLDCAT[]
*       it_sort                       =
*       it_filter                     =
      EXCEPTIONS
        INVALID_PARAMETER_COMBINATION = 1
        PROGRAM_ERROR                 = 2
        TOO_MANY_LINES                = 3
        OTHERS                        = 4.
    IF SY-SUBRC <> 0.
      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
                 WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.
  ENDIF.
ENDMODULE.

MODULE GETDATA_4012 OUTPUT.
  IF SY-UCOMM = 'EBIZ_FC3'.
    CUSTOMERID = KNA1-KUNNR.
    CLEAR: IT_OUTTAB[], IT_FLDCAT[], CWA_MATRIX, CT_MATRIX, ZEBIZ_MATRIX.
    4012_FROM_DATE = SY-DATUM - 6.
    4012_TO_DATE = SY-DATUM.
    IF 4012_FROM_DATE <> '' AND 4012_FROM_DATE <> '00000000'.
      CONCATENATE 4012_FROM_DATE+0(4) '-' 4012_FROM_DATE+4(2) '-' 4012_FROM_DATE+6(2) 'T00:00:01' INTO FDATE.
    ENDIF.
    IF 4012_TO_DATE <> '' AND 4012_TO_DATE <> '00000000'.
      CONCATENATE 4012_TO_DATE+0(4) '-' 4012_TO_DATE+4(2) '-' 4012_TO_DATE+6(2) 'T23:59:59' INTO TDATE.
    ENDIF.

    CALL FUNCTION 'ZEBIZ_GETPAYMENTTRANSACTIONS'
      EXPORTING
        CUSTOMER_ID                = CUSTOMERID
        FROMDATE                   = FDATE
        TODATE                     = TDATE
        ORDERID                    = ''
      IMPORTING
        SEARCH_TRANSACTIONS_RESULT = SEARCH_TRANSACTIONS_RESULT.
    CALL FUNCTION 'ZEBIZ_GETRECEIPTLIST'
      IMPORTING
        RECEIPT = RECEIPT.
    CLEAR: GS_VALUES, GT_VALUES[].
    SELECT SINGLE *  FROM ADR6 INTO  CWA_AD6
    WHERE ADDRNUMBER = KNA1-ADRNR.
    LOOP AT RECEIPT INTO 4019_CWA.
      GS_VALUES-TEXT = 4019_CWA-NAME.
      GS_VALUES-KEY = 4019_CWA-RECEIPT_REF_NUM.
      APPEND GS_VALUES TO GT_VALUES.
    ENDLOOP.
    GT_ID = 'ZEBIZ_MATRIX-TEMPLATE'.

    CALL FUNCTION 'VRM_SET_VALUES'
      EXPORTING
        ID     = GT_ID
        VALUES = GT_VALUES.
*  EXCEPTIONS
*    ID_ILLEGAL_NAME       = 1
*    OTHERS                = 2
    .
    SORT SEARCH_TRANSACTIONS_RESULT-TRANSACTIONS-TRANSACTION_OBJECT BY DATE_TIME DESCENDING.
    LOOP AT SEARCH_TRANSACTIONS_RESULT-TRANSACTIONS-TRANSACTION_OBJECT INTO 4012_CWA.
      if 4012_CWA-TRANSACTION_TYPE = 'Voided Sale' and 4012_CWA-DETAILS-AMOUNT = '  5.0000000000000003E-02'.
      else.
      CWA_MATRIX-CUSTOMER_ID = 4012_CWA-CUSTOMER_ID.
      CWA_MATRIX-INVOICE = 4012_CWA-DETAILS-INVOICE.
      CWA_MATRIX-ORDER_ID = 4012_CWA-DETAILS-ORDER_ID.
      CWA_MATRIX-REF_NUM = 4012_CWA-RESPONSE-REF_NUM.
      CWA_MATRIX-AMOUNT = 4012_CWA-DETAILS-AMOUNT.
      CWA_MATRIX-TRANSACTION_TYPE = 4012_CWA-TRANSACTION_TYPE.
      CWA_MATRIX-AUTH_AMOUNT = 4012_CWA-RESPONSE-AUTH_AMOUNT.
      CWA_MATRIX-STATUS = 4012_CWA-RESPONSE-STATUS.
      CWA_MATRIX-TRANSACTION_STATUS = 4012_CWA-STATUS.
      CWA_MATRIX-TRANSACTION_DATE = 4012_CWA-DATE_TIME.

      CWA_MATRIX-EMAIL = CWA_AD6-SMTP_ADDR.
      APPEND CWA_MATRIX TO CT_MATRIX.
      endif.
    ENDLOOP.
  ENDIF.
ENDMODULE.

*&---------------------------------------------------------------------*
*&      Module  SEARCH_BACKUP_4012  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE SEARCH_BACKUP_4012 INPUT.
  IF SY-UCOMM = 'FCT_SEARCH'.
    CUSTOMERID = KNA1-KUNNR.

    IF 4012_FROM_DATE <> '' AND 4012_FROM_DATE <> '00000000'.
      CONCATENATE 4012_FROM_DATE+0(4) '-' 4012_FROM_DATE+4(2) '-' 4012_FROM_DATE+6(2) 'T00:00:01' INTO FDATE.
    ENDIF.
    IF 4012_TO_DATE <> '' AND 4012_TO_DATE <> '00000000'.
      CONCATENATE 4012_TO_DATE+0(4) '-' 4012_TO_DATE+4(2) '-' 4012_TO_DATE+6(2) 'T23:59:59' INTO TDATE.
    ENDIF.
*free: grid, container1.
    CLEAR: IT_OUTTAB[], IT_FLDCAT[].
    CALL FUNCTION 'ZEBIZ_GETPAYMENTTRANSACTIONS'
      EXPORTING
        CUSTOMER_ID                = CUSTOMERID
        FROMDATE                   = FDATE
        TODATE                     = TDATE
        ORDERID                    = ''
      IMPORTING
        SEARCH_TRANSACTIONS_RESULT = SEARCH_TRANSACTIONS_RESULT.
    SORT SEARCH_TRANSACTIONS_RESULT-TRANSACTIONS-TRANSACTION_OBJECT BY DATE_TIME DESCENDING.

    LOOP AT SEARCH_TRANSACTIONS_RESULT-TRANSACTIONS-TRANSACTION_OBJECT INTO 4012_CWA.
 if 4012_CWA-TRANSACTION_TYPE = 'Voided Sale' and 4012_CWA-DETAILS-AMOUNT = '  5.0000000000000003E-02'.
      else.
      IT_OUTTAB-4012_CUSTOMER_ID = 4012_CWA-CUSTOMER_ID.
      IT_OUTTAB-4012_INVOICE_ID = 4012_CWA-DETAILS-INVOICE.
      IT_OUTTAB-4012_ORDER_ID = 4012_CWA-DETAILS-ORDER_ID.
      IT_OUTTAB-4012_REF_NUM = 4012_CWA-RESPONSE-REF_NUM.
      IT_OUTTAB-4012_AMOUNT = 4012_CWA-DETAILS-AMOUNT.
      IT_OUTTAB-4012_TRANSACTION_TYPE = 4012_CWA-TRANSACTION_TYPE.
      IT_OUTTAB-4012_AUTH_AMOUNT = 4012_CWA-RESPONSE-AUTH_AMOUNT.
      IT_OUTTAB-4012_STATUS = 4012_CWA-RESPONSE-STATUS.
      IT_OUTTAB-4012_TRANSACTION_STATUS = 4012_CWA-STATUS.
      IT_OUTTAB-4012_DATE = 4012_CWA-DATE_TIME.
      APPEND IT_OUTTAB.
      endif.
    ENDLOOP.
    IT_FLDCAT-FIELDNAME = '4012_CUSTOMER_ID'.
    IT_FLDCAT-REPTEXT   = 'CUSTOMER ID'.
    APPEND IT_FLDCAT.
    IT_FLDCAT-FIELDNAME = '4012_Invoice_ID'.
    IT_FLDCAT-REPTEXT   = 'Inovice ID'.
    APPEND IT_FLDCAT.
    IT_FLDCAT-FIELDNAME = '4012_Order_ID'.
    IT_FLDCAT-REPTEXT   = 'Order ID'.
    APPEND IT_FLDCAT.
    IT_FLDCAT-FIELDNAME = '4012_Ref_Num'.
    IT_FLDCAT-REPTEXT   = 'Ref Num'.
    APPEND IT_FLDCAT.
    IT_FLDCAT-FIELDNAME = '4012_Amount'.
    IT_FLDCAT-REPTEXT   = 'Amount'.
    APPEND IT_FLDCAT.
    IT_FLDCAT-FIELDNAME = '4012_Transaction_Type'.
    IT_FLDCAT-REPTEXT   = 'Transaction Type'.
    APPEND IT_FLDCAT.
    IT_FLDCAT-FIELDNAME = '4012_Auth_Amount'.
    IT_FLDCAT-REPTEXT   = 'Auth Amount'.
    APPEND IT_FLDCAT.
    IT_FLDCAT-FIELDNAME = '4012_Status'.
    IT_FLDCAT-REPTEXT   = 'Status'.
    APPEND IT_FLDCAT.
    IT_FLDCAT-FIELDNAME = '4012_Transaction_Status'.
    IT_FLDCAT-REPTEXT   = 'Transaction Status'.
    APPEND IT_FLDCAT.
    IT_FLDCAT-FIELDNAME = '4012_Date'.
    IT_FLDCAT-REPTEXT   = 'Date'.
    APPEND IT_FLDCAT.
*  CREATE OBJECT container1
*  EXPORTING
*    container_name              = 'CUSTOM1'.
*  CREATE OBJECT grid
*    EXPORTING
*      i_parent                    = container1.
    CALL METHOD GRID->SET_TABLE_FOR_FIRST_DISPLAY
*    EXPORTING
*      i_buffer_active               =
*      i_bypassing_buffer            =
*      i_consistency_check           =
*      i_structure_name              =
*      is_variant                    =
*      i_save                        =
*      i_default                     = 'x'
*      is_layout                     =
*      is_print                      =
*      it_special_groups             =
*      it_toolbar_excluding          =
*      it_hyperlink                  =
*      it_alv_graphics               =
*      it_except_qinfo               =
*      ir_salv_adapter               =
      CHANGING
        IT_OUTTAB                     = IT_OUTTAB[]
        IT_FIELDCATALOG               = IT_FLDCAT[]
*       it_sort                       =
*       it_filter                     =
      EXCEPTIONS
        INVALID_PARAMETER_COMBINATION = 1
        PROGRAM_ERROR                 = 2
        TOO_MANY_LINES                = 3
        OTHERS                        = 4.
    IF SY-SUBRC <> 0.
      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
                 WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  SEARCH_4012  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE SEARCH_4012 INPUT.
  IF SY-UCOMM = 'FCT_SEARCH'.
    CUSTOMERID = KNA1-KUNNR.
    IF 4012_FROM_DATE <> '' AND 4012_FROM_DATE <> '00000000'.
      CONCATENATE 4012_FROM_DATE+0(4) '-' 4012_FROM_DATE+4(2) '-' 4012_FROM_DATE+6(2) 'T00:00:01' INTO FDATE.
    ENDIF.
    IF 4012_TO_DATE <> '' AND 4012_TO_DATE <> '00000000'.
      CONCATENATE 4012_TO_DATE+0(4) '-' 4012_TO_DATE+4(2) '-' 4012_TO_DATE+6(2) 'T23:59:59' INTO TDATE.
    ENDIF.
*free: grid, container1.
    CLEAR: IT_OUTTAB[], IT_FLDCAT[], CWA_MATRIX, CT_MATRIX, ZEBIZ_MATRIX.
    CALL FUNCTION 'ZEBIZ_GETPAYMENTTRANSACTIONS'
      EXPORTING
        CUSTOMER_ID                = CUSTOMERID
        FROMDATE                   = FDATE
        TODATE                     = TDATE
        ORDERID                    = ''
      IMPORTING
        SEARCH_TRANSACTIONS_RESULT = SEARCH_TRANSACTIONS_RESULT.
    CALL FUNCTION 'ZEBIZ_GETRECEIPTLIST'
      IMPORTING
        RECEIPT = RECEIPT.
    CLEAR: GS_VALUES, GT_VALUES[].
    SELECT SINGLE *  FROM ADR6 INTO  CWA_AD6
    WHERE ADDRNUMBER = KNA1-ADRNR.
    LOOP AT RECEIPT INTO 4019_CWA.
      GS_VALUES-TEXT = 4019_CWA-NAME.
      GS_VALUES-KEY = 4019_CWA-RECEIPT_REF_NUM.
      APPEND GS_VALUES TO GT_VALUES.
    ENDLOOP.
    GT_ID = 'ZEBIZ_MATRIX-TEMPLATE'.

    CALL FUNCTION 'VRM_SET_VALUES'
      EXPORTING
        ID     = GT_ID
        VALUES = GT_VALUES.
    .
    SORT SEARCH_TRANSACTIONS_RESULT-TRANSACTIONS-TRANSACTION_OBJECT BY DATE_TIME DESCENDING.
    LOOP AT SEARCH_TRANSACTIONS_RESULT-TRANSACTIONS-TRANSACTION_OBJECT INTO 4012_CWA.
 if 4012_CWA-TRANSACTION_TYPE = 'Voided Sale' and 4012_CWA-DETAILS-AMOUNT = '  5.0000000000000003E-02'.
      else.

      CWA_MATRIX-CUSTOMER_ID = 4012_CWA-CUSTOMER_ID.
      CWA_MATRIX-INVOICE = 4012_CWA-DETAILS-INVOICE.
      CWA_MATRIX-ORDER_ID = 4012_CWA-DETAILS-ORDER_ID.
      CWA_MATRIX-REF_NUM = 4012_CWA-RESPONSE-REF_NUM.
      CWA_MATRIX-AMOUNT = 4012_CWA-DETAILS-AMOUNT.
      CWA_MATRIX-TRANSACTION_TYPE = 4012_CWA-TRANSACTION_TYPE.
      CWA_MATRIX-AUTH_AMOUNT = 4012_CWA-RESPONSE-AUTH_AMOUNT.
      CWA_MATRIX-STATUS = 4012_CWA-RESPONSE-STATUS.
      CWA_MATRIX-TRANSACTION_STATUS = 4012_CWA-STATUS.
      CWA_MATRIX-TRANSACTION_DATE = 4012_CWA-DATE_TIME.
      CWA_MATRIX-EMAIL = CWA_AD6-SMTP_ADDR.
      APPEND CWA_MATRIX TO CT_MATRIX.
      endif.
    ENDLOOP.

  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  REFRESH_4012  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE REFRESH_4012 INPUT.

  IF SY-UCOMM = 'FCT_REFRESH'.
    CLEAR: IT_OUTTAB[], IT_FLDCAT[], CWA_MATRIX, CT_MATRIX, ZEBIZ_MATRIX, FDATE, TDATE.
    CUSTOMERID = KNA1-KUNNR.
    IF 4012_FROM_DATE <> '' AND 4012_FROM_DATE <> '00000000'.
      CONCATENATE 4012_FROM_DATE+0(4) '-' 4012_FROM_DATE+4(2) '-' 4012_FROM_DATE+6(2) 'T00:00:01' INTO FDATE.
    ENDIF.
    IF 4012_TO_DATE <> '' AND 4012_TO_DATE <> '00000000'.
      CONCATENATE 4012_TO_DATE+0(4) '-' 4012_TO_DATE+4(2) '-' 4012_TO_DATE+6(2) 'T23:59:59' INTO TDATE.
    ENDIF.
*free: grid, container1.

    CALL FUNCTION 'ZEBIZ_GETPAYMENTTRANSACTIONS'
      EXPORTING
        CUSTOMER_ID                = CUSTOMERID
        FROMDATE                   = FDATE
        TODATE                     = TDATE
        ORDERID                    = ''
      IMPORTING
        SEARCH_TRANSACTIONS_RESULT = SEARCH_TRANSACTIONS_RESULT.
    CALL FUNCTION 'ZEBIZ_GETRECEIPTLIST'
      IMPORTING
        RECEIPT = RECEIPT.
    CLEAR: GS_VALUES, GT_VALUES[].
    SELECT SINGLE *  FROM ADR6 INTO  CWA_AD6
    WHERE ADDRNUMBER = KNA1-ADRNR.
    LOOP AT RECEIPT INTO 4019_CWA.
      GS_VALUES-TEXT = 4019_CWA-NAME.
      GS_VALUES-KEY = 4019_CWA-RECEIPT_REF_NUM.
      APPEND GS_VALUES TO GT_VALUES.
    ENDLOOP.
    GT_ID = 'ZEBIZ_MATRIX-TEMPLATE'.

    CALL FUNCTION 'VRM_SET_VALUES'
      EXPORTING
        ID     = GT_ID
        VALUES = GT_VALUES.
    .
    SORT SEARCH_TRANSACTIONS_RESULT-TRANSACTIONS-TRANSACTION_OBJECT BY DATE_TIME DESCENDING.
    LOOP AT SEARCH_TRANSACTIONS_RESULT-TRANSACTIONS-TRANSACTION_OBJECT INTO 4012_CWA.
 if 4012_CWA-TRANSACTION_TYPE = 'Voided Sale' and 4012_CWA-DETAILS-AMOUNT = '  5.0000000000000003E-02'.
      else.

      CWA_MATRIX-CUSTOMER_ID = 4012_CWA-CUSTOMER_ID.
      CWA_MATRIX-INVOICE = 4012_CWA-DETAILS-INVOICE.
      CWA_MATRIX-ORDER_ID = 4012_CWA-DETAILS-ORDER_ID.
      CWA_MATRIX-REF_NUM = 4012_CWA-RESPONSE-REF_NUM.
      CWA_MATRIX-AMOUNT = 4012_CWA-DETAILS-AMOUNT.
      CWA_MATRIX-TRANSACTION_TYPE = 4012_CWA-TRANSACTION_TYPE.
      CWA_MATRIX-AUTH_AMOUNT = 4012_CWA-RESPONSE-AUTH_AMOUNT.
      CWA_MATRIX-STATUS = 4012_CWA-RESPONSE-STATUS.
      CWA_MATRIX-TRANSACTION_STATUS = 4012_CWA-STATUS.
      CWA_MATRIX-TRANSACTION_DATE = 4012_CWA-DATE_TIME.
      CWA_MATRIX-EMAIL = CWA_AD6-SMTP_ADDR.
      APPEND CWA_MATRIX TO CT_MATRIX.
      endif.
    ENDLOOP.

  ENDIF.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  EMAIL_4019  INPUT

*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE EMAIL_4019 INPUT.
  IF SY-UCOMM = 'FCT_EMAIL2'.
*Call Screen 4020 STARTING AT 10 08
*                 ENDING AT 70 16.
    READ TABLE CT_MATRIX INTO CWA_MATRIX INDEX MATRIX-CURRENT_LINE.
    IF CSELECT EQ 'X'.
      IF ZEBIZ_MATRIX-TEMPLATE = ''.
        MESSAGE 'Please select receipt name' TYPE 'I'.
        VAL = '-1'.
        RETURN.
      ELSEIF ZEBIZ_MATRIX-EMAIL = ''.
        MESSAGE 'Please enter email' TYPE 'I'.
        VAL = '-1'.
        RETURN.

      ENDIF.

      CALL FUNCTION 'ZEBIZ_GETRECEIPTLIST'
        IMPORTING
          RECEIPT = RECEIPT.
      DATA: RECEIPTNUM          TYPE STRING,
            TRANSACTION_REF_NUM TYPE STRING,
            RECEIPT_NAME        TYPE STRING,
            EMAIL_ADDRESS       TYPE STRING.
      CLEAR: RECEIPT_NAME, RECEIPTNUM.
      LOOP AT RECEIPT INTO 4019_CWA.
        IF 4019_CWA-RECEIPT_REF_NUM = ZEBIZ_MATRIX-TEMPLATE.
          RECEIPTNUM = 4019_CWA-RECEIPT_REF_NUM.
          RECEIPT_NAME = 4019_CWA-SUBJECT.
          EXIT.
        ENDIF.
      ENDLOOP.
      TRANSACTION_REF_NUM = CWA_MATRIX-REF_NUM.
      SELECT SINGLE *  FROM ADR6 INTO  CWA_AD6
        WHERE ADDRNUMBER = KNA1-ADRNR.
      EMAIL_ADDRESS = ZEBIZ_MATRIX-EMAIL.
      CALL FUNCTION 'ZEBIZ_SENDEMAILRECEIPT'
        EXPORTING
          RECEIPT_REF_NUM      = RECEIPTNUM
          TRANSACTION_REF_NUM  = TRANSACTION_REF_NUM
          RECEIPT_NAME         = ''
          EMAIL_ADDRESS        = EMAIL_ADDRESS
        IMPORTING
          EMAIL_RECEIPT_RESULT = EMAIL_RECEIPT_RESULT.
      IF EMAIL_RECEIPT_RESULT-ERROR = ''.
        MESSAGE EMAIL_RECEIPT_RESULT-STATUS TYPE 'S'.
      ELSE.
        MESSAGE EMAIL_RECEIPT_RESULT-ERROR TYPE 'I'.
      ENDIF.
    ENDIF.
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  STATUS_4020  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_4020 OUTPUT.
  IF SY-DYNNR = '4020' AND SY-UCOMM = 'T\15'.
    VBAK-ZZ4020_SALES_ORDER_ID = VBAK-VBELN.
    CLEAR: GS_VALUES, GT_VALUES[].
    TRY.
        CUSTOMERID = VBAK-KUNNR.
        CLEAR: GS_VALUES, GT_VALUES[].
        GS_VALUES-TEXT = 'Checking'.
        GS_VALUES-KEY = 'Checking'.
        APPEND GS_VALUES TO GT_VALUES.
        GS_VALUES-TEXT = 'Savings'.
        GS_VALUES-KEY = 'Savings'.
        APPEND GS_VALUES TO GT_VALUES.
        GT_ID = 'VBAK-ZZ4020_ACCOUNT_TYPE'.

        CALL FUNCTION 'VRM_SET_VALUES'
          EXPORTING
            ID     = GT_ID
            VALUES = GT_VALUES.
        CLEAR: GS_VALUES, GT_VALUES[].
        CALL FUNCTION 'ZEBIZ_PAYMENTMETHODS'
          EXPORTING
            CUSTOMER_ID       = CUSTOMERID
          IMPORTING
            PAYMENT_METHOD_PR = WA_GET.
        LOOP AT WA_GET INTO WA_GET_CUD.
          IF WA_GET_CUD-ACCOUNT <> ''.
            GS_VALUES-TEXT = WA_GET_CUD-ACCOUNT.
            GS_VALUES-KEY = WA_GET_CUD-METHOD_ID.
          ELSEIF WA_GET_CUD-CARD_NUMBER <> ''.
            GS_VALUES-TEXT = WA_GET_CUD-CARD_NUMBER.
            GS_VALUES-KEY = WA_GET_CUD-METHOD_ID.
          ENDIF.
          APPEND GS_VALUES TO GT_VALUES.
          TRY.

              GET_CUSTOMER_PAYMENT_METHOD_PR = WA_GET_CUD.

              IF GET_CUSTOMER_PAYMENT_METHOD_PR-SECONDARY_SORT = '0'.
                IF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_NUMBER <> ''.
                  CONCATENATE GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_EXPIRATION+5(2) GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_EXPIRATION+2(2)
               INTO EXDATE.
                ENDIF.
                VBAK-ZZ4020_PAYMENT_METHOD = GET_CUSTOMER_PAYMENT_METHOD_PR-METHOD_ID.
                VBAK-ZZ4020_CARD_NUMBER = GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_NUMBER.
                VBAK-ZZ4020_CARDCODE = GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_CODE.
                VBAK-ZZ4020_ACCT_HOLDER = GET_CUSTOMER_PAYMENT_METHOD_PR-ACCOUNT_HOLDER_NAME.
                VBAK-ZZ4020_ROUTING = GET_CUSTOMER_PAYMENT_METHOD_PR-ROUTING.
                VBAK-ZZ4020_ACCOUNT = GET_CUSTOMER_PAYMENT_METHOD_PR-ACCOUNT.
                VBAK-ZZ4020_ACCOUNT_TYPE = GET_CUSTOMER_PAYMENT_METHOD_PR-ACCOUNT_TYPE.
                VBAK-ZZ4020_ADDRESS = GET_CUSTOMER_PAYMENT_METHOD_PR-AVS_STREET.
                VBAK-ZZ4020_ZIP = GET_CUSTOMER_PAYMENT_METHOD_PR-AVS_ZIP.
                VBAK-ZZ4020_EXP_DATE = EXDATE.
*              VBAK-ACCOUNT_TYPE = GET_CUSTOMER_PAYMENT_METHOD_PR-ACCOUNT_TYPE.
                VBAK-ZZ4020_METHOD = GET_CUSTOMER_PAYMENT_METHOD_PR-METHOD_NAME.
                IF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'V'.
                  VBAK-ZZ4020_CARDNAME = 'VISA'.
                ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'M'.
                  VBAK-ZZ4020_CARDNAME = 'Ma'.
                ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'A'.
                  VBAK-ZZ4020_CARDNAME = 'Am'.
                ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'DS'.
                  VBAK-ZZ4020_CARDNAME = 'Disc'.
                ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = ''.
                  VBAK-ZZ4020_CARDNAME = 'eCheck'.
                ELSE.
                  VBAK-ZZ4020_CARDNAME = GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE.

                ENDIF.
                SELECT SINGLE * FROM ZEBIZ_CUSTOMER INTO CWA
                      WHERE CUSTOMERID = VBAK-KUNNR AND PAYMENT_METHOD = GET_CUSTOMER_PAYMENT_METHOD_PR-METHOD_ID
                    .

                VBAK-ZZ4020_ADDRESS = CWA-ADDRESS.
                VBAK-ZZ4020_ZIP = CWA-ZIP.
                VBAK-ZZ4020_CITY = CWA-CITY.
                VBAK-ZZ4020_STATE = CWA-STATE.
                VBAK-ZZ4020_EMAIL = CWA-EMAIL.
                VBAK-ZZ4020_AMOUNT = VBAK-NETWR.
                VBAK-ZZ4020_PAYMENTDATE = VBAK-AUDAT.
              ENDIF.
            CATCH CX_AI_SYSTEM_FAULT INTO EXC.
              MSG = EXC->GET_TEXT( ).
              WRITE:/  MSG.
*CATCH zcx_zsqrt_exception.
            CATCH CX_AI_APPLICATION_FAULT INTO EXC.
              MSG = EXC->GET_TEXT( ).
              WRITE:/  MSG.
          ENDTRY.

        ENDLOOP.
      CATCH CX_AI_SYSTEM_FAULT INTO EXC.
        MSG = EXC->GET_TEXT( ).
        WRITE:/  MSG.
*CATCH zcx_zsqrt_exception.
      CATCH CX_AI_APPLICATION_FAULT INTO EXC.
        MSG = EXC->GET_TEXT( ).
        WRITE:/  MSG.
    ENDTRY.
    GT_ID = 'VBAK-ZZ4020_PAYMENT_METHOD'.

    CALL FUNCTION 'VRM_SET_VALUES'
      EXPORTING
        ID     = GT_ID
        VALUES = GT_VALUES.
    CLEAR: GS_VALUES, GT_VALUES[].
    GS_VALUES-TEXT = 'AuthOnly'.
    GS_VALUES-KEY = 'AuthOnly'.
    APPEND GS_VALUES TO GT_VALUES.
    GS_VALUES-TEXT = 'Capture'.
    GS_VALUES-KEY = 'Capture'.
    APPEND GS_VALUES TO GT_VALUES.
    GT_ID = 'VBAK-ZZ4020_TRANS_TYPE'.

    CALL FUNCTION 'VRM_SET_VALUES'
      EXPORTING
        ID     = GT_ID
        VALUES = GT_VALUES.

    VBAK-ZZ4020_TRANS_TYPE = 'AuthOnly'.
    VBAK-ZZ4020_EXTRA = '0.0'.
  ENDIF.
  IF SY-DYNNR = '4020'.
    LOOP AT SCREEN.
      IF VBAK-ZZ4020_CARD_NUMBER <> ''.
        IF SCREEN-NAME = 'VBAK-ZZ4020_ACCOUNT_TYPE'.
          SCREEN-ACTIVE = 0. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'VBAK-ZZ4020_ACCOUNT'.
          SCREEN-ACTIVE = 0. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'VBAK-ZZ4020_ROUTING'.
          SCREEN-ACTIVE = 0. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'TXT11'.
          SCREEN-INVISIBLE = 1. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'TXT20'.
          SCREEN-INVISIBLE = 1. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'TXT21'.
          SCREEN-INVISIBLE = 1. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'VBAK-ZZ4020_CARD_NUMBER'.
          SCREEN-ACTIVE = 1. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'VBAK-ZZ4020_CARDCODE'.
          SCREEN-ACTIVE = 1. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'VBAK-ZZ4020_EXP_DATE'.
          SCREEN-ACTIVE = 1. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'TXT3'.
          SCREEN-INVISIBLE = 0. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'TXT4'.
          SCREEN-INVISIBLE = 0. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'TXT5'.
          SCREEN-INVISIBLE = 0. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.

      ELSEIF VBAK-ZZ4020_ACCOUNT <> ''.
        IF SCREEN-NAME = 'VBAK-ZZ4020_ACCOUNT_TYPE'.
          SCREEN-ACTIVE = 1. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'VBAK-ZZ4020_ACCOUNT'.
          SCREEN-ACTIVE = 1. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'VBAK-ZZ4020_ROUTING'.
          SCREEN-ACTIVE = 1. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'TXT11'.
          SCREEN-INVISIBLE = 0. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'TXT20'.
          SCREEN-INVISIBLE = 0. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'TXT21'.
          SCREEN-INVISIBLE = 0. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'VBAK-ZZ4020_CARD_NUMBER'.
          SCREEN-ACTIVE = 0. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'VBAK-ZZ4020_CARDCODE'.
          SCREEN-ACTIVE = 0. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'VBAK-ZZ4020_EXP_DATE'.
          SCREEN-ACTIVE = 0. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'TXT3'.
          SCREEN-INVISIBLE = 1. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'TXT4'.
          SCREEN-INVISIBLE = 1. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'TXT5'.
          SCREEN-INVISIBLE = 1. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.

      ENDIF.
    ENDLOOP.
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_4020  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_4020 INPUT.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  VOID_4012  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE VOID_4012 INPUT.
  IF SY-UCOMM = 'FCT_VOID'.
*Call Screen 4020 STARTING AT 10 08
*                 ENDING AT 70 16.
    READ TABLE CT_MATRIX INTO CWA_MATRIX INDEX MATRIX-CURRENT_LINE.
    IF CSELECT EQ 'X'.

      TRAN-COMMAND = 'creditvoid'.
      TRAN-REF_NUM = CWA_MATRIX-REF_NUM.

      CALL FUNCTION 'ZEBIZ_RUNTRANSACTIONS'
        EXPORTING
          TRAN                   = TRAN
        IMPORTING
          RUN_TRANSACTION_RESULT = RUN_TRANSACTION_RESULT.
      IF RUN_TRANSACTION_RESULT-RESULT_CODE = 'E'.
        MESSAGE RUN_TRANSACTION_RESULT-ERROR TYPE 'I'.
      ELSE.
        MESSAGE RUN_TRANSACTION_RESULT-STATUS TYPE 'S'.
      ENDIF.
    ENDIF.
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  TEMPLATE_4019  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE TEMPLATE_4019 INPUT.
  IF SY-UCOMM = 'FCT_REP'.
    READ TABLE CT_MATRIX INTO CWA_MATRIX INDEX MATRIX-CURRENT_LINE.
    RECEIPTNUM = ZEBIZ_MATRIX-TEMPLATE.
    CWA_MATRIX-TEMPLATE = RECEIPTNUM.
    MOVE-CORRESPONDING CWA_MATRIX TO ZEBIZ_MATRIX.
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  ACCOUNTTYPE  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE ACCOUNTTYPE INPUT.
  IF SY-UCOMM = 'FCT_TYP'.
    RECEIPTNUM = ZEBIZ_CUSTOMER-ACCOUNT_TYPE.
    ZEBIZ_CUSTOMER-ACCOUNT_TYPE = RECEIPTNUM.
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  RUN_TRANSACTION_RESULT_4020  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE RUN_TRANSACTION_RESULT_4020 INPUT.
  IF SY-UCOMM = 'ENT1' AND SY-DYNNR = '4020'.

    IF VBAK-ZZ4020_RESULT = ''.
      MESSAGE 'Please run trasction first ' TYPE 'I' DISPLAY LIKE 'E'.
      SY-UCOMM = 'ENT1'.
      " FCODE = 'FCT_TRS'.
      RETURN.

    ENDIF.
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  PAYMENT_METHOD_4020  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE PAYMENT_METHOD_4020 INPUT.
  IF SY-UCOMM = 'SICH' AND SY-DYNNR = '4020'.
    VAL = VBAK-ZZ4020_PAYMENT_METHOD.

    TRY.
        CUSTOMERID = VBAK-KUNNR.
        SELECT SINGLE * FROM ZEBIZ_CUSTOMER INTO CWA
       WHERE CUSTOMERID = KNA1-KUNNR AND PAYMENT_METHOD = VAL.
        TRY.
            PAYMENT_METHOD_ID = VAL.
            CALL FUNCTION 'ZEBIZ_GETPAYMENTMETHOD'
              EXPORTING
                CUSTOMER_ID                    = CUSTOMERID
                PAYMENT_METHOD_ID              = PAYMENT_METHOD_ID
              IMPORTING
                GET_CUSTOMER_PAYMENT_METHOD_PR = GET_CUSTOMER_PAYMENT_METHOD_PR.

            IF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_NUMBER <> ''.
              CONCATENATE GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_EXPIRATION+5(2) GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_EXPIRATION+2(2)
           INTO EXDATE.
            ENDIF.
            VBAK-ZZ4020_PAYMENT_METHOD = GET_CUSTOMER_PAYMENT_METHOD_PR-METHOD_ID.
            VBAK-ZZ4020_CARD_NUMBER = GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_NUMBER.
            VBAK-ZZ4020_CARDCODE = GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_CODE.
            VBAK-ZZ4020_ACCT_HOLDER = GET_CUSTOMER_PAYMENT_METHOD_PR-ACCOUNT_HOLDER_NAME.
            VBAK-ZZ4020_ROUTING = GET_CUSTOMER_PAYMENT_METHOD_PR-ROUTING.
            VBAK-ZZ4020_ACCOUNT = GET_CUSTOMER_PAYMENT_METHOD_PR-ACCOUNT.
            VBAK-ZZ4020_ACCOUNT_TYPE = GET_CUSTOMER_PAYMENT_METHOD_PR-ACCOUNT_TYPE.
            VBAK-ZZ4020_ADDRESS = GET_CUSTOMER_PAYMENT_METHOD_PR-AVS_STREET.
            VBAK-ZZ4020_ZIP = GET_CUSTOMER_PAYMENT_METHOD_PR-AVS_ZIP.
            VBAK-ZZ4020_EXP_DATE = EXDATE.
*              VBAK-ACCOUNT_TYPE = GET_CUSTOMER_PAYMENT_METHOD_PR-ACCOUNT_TYPE.
            VBAK-ZZ4020_METHOD = GET_CUSTOMER_PAYMENT_METHOD_PR-METHOD_NAME.
            IF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'V'.
              VBAK-ZZ4020_CARDNAME = 'VISA'.
            ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'M'.
              VBAK-ZZ4020_CARDNAME = 'Ma'.
            ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'A'.
              VBAK-ZZ4020_CARDNAME = 'Am'.
            ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = 'DS'.
              VBAK-ZZ4020_CARDNAME = 'Disc'.
            ELSEIF GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE = ''.
              VBAK-ZZ4020_CARDNAME = 'eCheck'.
            ELSE.
              VBAK-ZZ4020_CARDNAME = GET_CUSTOMER_PAYMENT_METHOD_PR-CARD_TYPE.

            ENDIF.
            SELECT SINGLE * FROM ZEBIZ_CUSTOMER INTO CWA
                  WHERE CUSTOMERID = VBAK-KUNNR AND PAYMENT_METHOD = GET_CUSTOMER_PAYMENT_METHOD_PR-METHOD_ID
                .

            VBAK-ZZ4020_ADDRESS = CWA-ADDRESS.
            VBAK-ZZ4020_ZIP = CWA-ZIP.
            VBAK-ZZ4020_CITY = CWA-CITY.
            VBAK-ZZ4020_STATE = CWA-STATE.
            VBAK-ZZ4020_EMAIL = CWA-EMAIL.
            VBAK-ZZ4020_AMOUNT = VBAK-NETWR.
            VBAK-ZZ4020_PAYMENTDATE = VBAK-AUDAT.

            IF GET_CUSTOMER_PAYMENT_METHOD_PR-SECONDARY_SORT = '0'.
              ZEBIZ_CUSTOMER-DEFAULT_CARD = 'X'.
            ELSE.
              ZEBIZ_CUSTOMER-DEFAULT_CARD = ''.
            ENDIF.
          CATCH CX_AI_SYSTEM_FAULT INTO EXC.
            MSG = EXC->GET_TEXT( ).
            WRITE:/  MSG.
*CATCH zcx_zsqrt_exception.
          CATCH CX_AI_APPLICATION_FAULT INTO EXC.
            MSG = EXC->GET_TEXT( ).
            WRITE:/  MSG.
        ENDTRY.
        CLEAR: GS_VALUES, GT_VALUES[].
      CATCH CX_AI_SYSTEM_FAULT INTO EXC.
        MSG = EXC->GET_TEXT( ).
        WRITE:/  MSG.
*CATCH zcx_zsqrt_exception.
      CATCH CX_AI_APPLICATION_FAULT INTO EXC.
        MSG = EXC->GET_TEXT( ).
        WRITE:/  MSG.
    ENDTRY.

    LOOP AT SCREEN.
      IF VBAK-ZZ4020_CARD_NUMBER <> ''.
        IF SCREEN-NAME = 'VBAK-ZZ4020_ACCOUNT_TYPE'.
          SCREEN-ACTIVE = 0. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'VBAK-ZZ4020_ACCOUNT'.
          SCREEN-ACTIVE = 0. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'VBAK-ZZ4020_ROUTING'.
          SCREEN-ACTIVE = 0. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'TXT11'.
          SCREEN-INVISIBLE = 1. "this makes your field invisible
          "screen-active = 1
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'TXT20'.
          SCREEN-INVISIBLE = 1. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'TXT21'.
          SCREEN-INVISIBLE = 1. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'VBAK-ZZ4020_CARD_NUMBER'.
          SCREEN-ACTIVE = 1. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'VBAK-ZZ4020_CARDCODE'.
          SCREEN-ACTIVE = 1. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'VBAK-ZZ4020_EXP_DATE'.
          SCREEN-ACTIVE = 1. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'TXT3'.
          SCREEN-INVISIBLE = 0. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'TXT4'.
          SCREEN-INVISIBLE = 0. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'TXT5'.
          SCREEN-INVISIBLE = 0. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.

      ELSEIF VBAK-ZZ4020_ACCOUNT <> ''.
        IF SCREEN-NAME = 'VBAK-ZZ4020_ACCOUNT_TYPE'.
          SCREEN-ACTIVE = 1. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'VBAK-ZZ4020_ACCOUNT'.
          SCREEN-ACTIVE = 1. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'VBAK-ZZ4020_ROUTING'.
          SCREEN-ACTIVE = 1. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'TXT11'.
          SCREEN-INVISIBLE = 0. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'TXT20'.
          SCREEN-INVISIBLE = 0. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'TXT21'.
          SCREEN-INVISIBLE = 0. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'VBAK-ZZ4020_CARD_NUMBER'.
          SCREEN-ACTIVE = 0. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'VBAK-ZZ4020_CARDCODE'.
          SCREEN-ACTIVE = 0. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'VBAK-ZZ4020_EXP_DATE'.
          SCREEN-ACTIVE = 0. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'TXT3'.
          SCREEN-INVISIBLE = 1. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'TXT4'.
          SCREEN-INVISIBLE = 1. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.
        IF SCREEN-NAME = 'TXT5'.
          SCREEN-INVISIBLE = 1. "this makes your field invisible
          "screen-active = 1.
          MODIFY SCREEN.
        ENDIF.

      ENDIF.
    ENDLOOP.

  ENDIF.
ENDMODULE.
